[{"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\index.js":"1","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\App.js":"3","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NotFound.js":"4","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PrivateRoute.js":"5","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Login.js":"6","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Register.js":"7","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\EditGame.js":"8","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\RegisterPhone.js":"9","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteZombie.js":"10","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\PlayerState.js":"11","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteHuman.js":"12","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\Home.js":"13","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\LandingPage.js":"14","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Phone.js":"15","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\Auth.js":"16","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\AdminCreateGame.js":"17","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\Admin.js":"18","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\ChooseFaction.js":"19","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\CurrentGames.js":"20","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadCreate.js":"21","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadDetail.js":"22","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadList.js":"23","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\MapComponents\\MainMap.js":"24","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\firebase.js":"25","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\dbstorage.js":"26","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\localstorage.js":"27","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Header.js":"28","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\HeaderOutside.js":"29","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NavBar.js":"30","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\GameMenu.js":"31","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\ChatMessage.js":"32","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\gamedbstorage.js":"33","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\squadstorage.js":"34","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\baseUrl.js":"35","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Modal.js":"36","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PlayerStorage.js":"37","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\Chat.js":"38","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\CreateMissionMarker.js":"39","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\Bite.js":"40","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\GameStorage.js":"41","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\SquadMemberStorage.js":"42","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\markerStorage.js":"43","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\ChatMessageStorage.js":"44","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\KillStorage.js":"45"},{"size":517,"mtime":1608561367131,"results":"46","hashOfConfig":"47"},{"size":375,"mtime":1608561367132,"results":"48","hashOfConfig":"47"},{"size":3559,"mtime":1608720338090,"results":"49","hashOfConfig":"47"},{"size":336,"mtime":1608623502708,"results":"50","hashOfConfig":"47"},{"size":577,"mtime":1608561367134,"results":"51","hashOfConfig":"47"},{"size":2773,"mtime":1608623502567,"results":"52","hashOfConfig":"47"},{"size":4186,"mtime":1608623502583,"results":"53","hashOfConfig":"47"},{"size":6427,"mtime":1609765735984,"results":"54","hashOfConfig":"47"},{"size":1540,"mtime":1608623502589,"results":"55","hashOfConfig":"47"},{"size":1067,"mtime":1608561367122,"results":"56","hashOfConfig":"47"},{"size":694,"mtime":1608561367119,"results":"57","hashOfConfig":"47"},{"size":2613,"mtime":1609765736007,"results":"58","hashOfConfig":"47"},{"size":1826,"mtime":1609840493014,"results":"59","hashOfConfig":"47"},{"size":11803,"mtime":1609840501655,"results":"60","hashOfConfig":"47"},{"size":1486,"mtime":1608623502576,"results":"61","hashOfConfig":"47"},{"size":651,"mtime":1608561367134,"results":"62","hashOfConfig":"47"},{"size":5254,"mtime":1608712835684,"results":"63","hashOfConfig":"47"},{"size":1850,"mtime":1609841020353,"results":"64","hashOfConfig":"47"},{"size":1298,"mtime":1608712835688,"results":"65","hashOfConfig":"47"},{"size":4935,"mtime":1609765736015,"results":"66","hashOfConfig":"47"},{"size":5347,"mtime":1609840501657,"results":"67","hashOfConfig":"47"},{"size":6546,"mtime":1609840501657,"results":"68","hashOfConfig":"47"},{"size":5522,"mtime":1609840501658,"results":"69","hashOfConfig":"47"},{"size":3321,"mtime":1609840501656,"results":"70","hashOfConfig":"47"},{"size":820,"mtime":1608561367136,"results":"71","hashOfConfig":"47"},{"size":2400,"mtime":1609765736071,"results":"72","hashOfConfig":"47"},{"size":601,"mtime":1609765736085,"results":"73","hashOfConfig":"47"},{"size":547,"mtime":1608712835698,"results":"74","hashOfConfig":"47"},{"size":671,"mtime":1608623502695,"results":"75","hashOfConfig":"47"},{"size":891,"mtime":1608561367130,"results":"76","hashOfConfig":"47"},{"size":3672,"mtime":1609765736034,"results":"77","hashOfConfig":"47"},{"size":12468,"mtime":1609765735992,"results":"78","hashOfConfig":"47"},{"size":406,"mtime":1609765736078,"results":"79","hashOfConfig":"47"},{"size":773,"mtime":1609765736098,"results":"80","hashOfConfig":"47"},{"size":85,"mtime":1608561367135,"results":"81","hashOfConfig":"47"},{"size":860,"mtime":1608623502702,"results":"82","hashOfConfig":"47"},{"size":1732,"mtime":1609765736058,"results":"83","hashOfConfig":"47"},{"size":813,"mtime":1608720338091,"results":"84","hashOfConfig":"47"},{"size":3501,"mtime":1608712835684,"results":"85","hashOfConfig":"47"},{"size":9495,"mtime":1609840501654,"results":"86","hashOfConfig":"47"},{"size":2663,"mtime":1609765736050,"results":"87","hashOfConfig":"47"},{"size":1945,"mtime":1609765736065,"results":"88","hashOfConfig":"47"},{"size":2131,"mtime":1609765736091,"results":"89","hashOfConfig":"47"},{"size":3362,"mtime":1609765736042,"results":"90","hashOfConfig":"47"},{"size":455,"mtime":1609840501659,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"crhxuc",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\index.js",[],["196","197"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\App.js",["198"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport Login from './components/AuthComponents/Login'\r\nimport Register from './components/AuthComponents/Register'\r\nimport Phone from './components/AuthComponents/Phone'\r\nimport RegisterPhone from './components/AuthComponents/RegisterPhone'\r\nimport Admin from './components/AdminComponents/Admin'\r\nimport EditGame from './components/AdminComponents/EditGame'\r\nimport PlayerState from './components/AdminComponents/PlayerState'\r\nimport Bite from './components/GameComponents/Bite'\r\nimport CreateMissionMarker from './components/AdminComponents/CreateMissionMarker'\r\nimport BiteHuman from './components/GameComponents/BiteHuman'\r\nimport BiteZombie from './components/GameComponents/BiteZombie'\r\nimport ChooseFaction from './components/GameComponents/ChooseFaction'\r\nimport CurrentGames from './components/GameComponents/CurrentGames'\r\nimport Home from './components/HomeComponents/Home'\r\nimport LandingPage from './components/HomeComponents/LandingPage'\r\nimport MainMap from './components/MapComponents/MainMap'\r\nimport SquadCreate from './components/SquadComponents/SquadCreate'\r\nimport SquadDetail from './components/SquadComponents/SquadDetail'\r\nimport SquadList from './components/SquadComponents/SquadList'\r\nimport NotFound from './components/StylingComponents/NotFound'\r\nimport { AuthProvider } from \"./utils/Auth\";\r\nimport './components/StylingComponents/Components.css'\r\nimport AdminCreateGame from './components/AdminComponents/AdminCreateGame'\r\nimport Chat from \"./components/ChatMessageComponents/Chat\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/phone\" component={Phone} />\r\n          <Route exact path=\"/registerphone\" component={RegisterPhone} />\r\n          <PrivateRoute exact path=\"/\" component={Home} />\r\n          <PrivateRoute exact path=\"/landing\" component={LandingPage} />\r\n          <PrivateRoute exact path=\"/bite\" component={Bite} />\r\n          <PrivateRoute exact path=\"/bitehuman\" component={BiteHuman} />\r\n          <PrivateRoute exact path=\"/bitezombie\" component={BiteZombie} />\r\n          <PrivateRoute exact path=\"/squads\" component={SquadList} />\r\n          <PrivateRoute exact path=\"/squaddetails\" component={SquadDetail} />\r\n          <PrivateRoute exact path=\"/createsquad\" component={SquadCreate} />\r\n          <PrivateRoute exact path=\"/currentgames\" component={CurrentGames} />\r\n          <PrivateRoute exact path=\"/admin\" component={Admin} />\r\n          <PrivateRoute exact path=\"/playerstate\" component={PlayerState} />\r\n          <PrivateRoute exact path=\"/map\" component={MainMap} />\r\n          <PrivateRoute exact path=\"/choosefaction\" component={ChooseFaction} />\r\n          <PrivateRoute exact path=\"/creategame\" component={AdminCreateGame} />\r\n          <PrivateRoute exact path=\"/create/missionmarker\" component={CreateMissionMarker} />\r\n          <PrivateRoute exact path=\"/editgame\" component={EditGame} />\r\n          <PrivateRoute exact path=\"/chat\" component={Chat} />\r\n          <Route path='*'>\r\n            <NotFound header='Page not found' message='The page you requested does not exist' />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NotFound.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Login.js",["199"],"import React, { useContext } from \"react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport firebase from \"../../utils/firebase.js\";\r\nimport { AuthContext } from \"../../utils/Auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { loginUser } from \"../../utils/dbstorage.js\";\r\nimport Phone from \"./Phone.js\";\r\nimport HeaderOutside from \"../StylingComponents/HeaderOutside\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const handleLogin =\r\n        async event => {\r\n\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n            try {\r\n                const status = await loginUser(email.value, password.value)\r\n                if (status === 200) {\r\n                    await firebase\r\n                        .auth()\r\n                        .signInWithEmailAndPassword(email.value, password.value)\r\n                        .catch(err => {\r\n                            alert(err.message)\r\n                            history.push(\"/\")\r\n                        });\r\n                } else {\r\n                    alert(\"Incorrect email or password!\")\r\n                }\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        };\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HeaderOutside />\r\n            <section className=\"login-register\">\r\n                <div className=\"container\">\r\n                    <h1>Log in</h1>\r\n                    <Form onSubmit={handleLogin} name=\"loginForm\">\r\n                        <Form.Group controlId=\"formEmail\">\r\n                            <Form.Label>Email: </Form.Label>\r\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formPassword\">\r\n                            <Form.Label>Password: </Form.Label>\r\n                            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n                        </Form.Group>\r\n                        <button type=\"submit\">Log in</button>\r\n                        <Link to=\"/login\">\r\n                            <button>Cancel</button>\r\n                        </Link>\r\n                    </Form>\r\n                    <Link to=\"/register\">Don't have an account? Register here.</Link>\r\n                    <p>Or</p>\r\n                    <Link to=\"/phone\">Login with your phone!*</Link>\r\n                    <p><i>* Must be verified first!</i></p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Register.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\EditGame.js",["200","201","202"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../StylingComponents/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { UpdateGame, FetchAllGames, FetchGame } from \"../../utils/GameStorage\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameMenu from \"../StylingComponents/GameMenu\";\r\n\r\n\r\nconst EditGame = (props) => {\r\n  const [validGameName, setValidGameName] = useState(false);\r\n  const [validGameDescription, setValidGameDescription] = useState(false);\r\n  const [allGames, setAllGames] = useState([])\r\n  const [selectedGameId, setSelectedGameId] = useState(null);\r\n  const [gameObject, setGameObject] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetchAllGames();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedGameId !== null) {\r\n      fetchGame()\r\n    }\r\n    else {\r\n      setGameObject({})\r\n    }\r\n  }, [selectedGameId]);\r\n\r\n  useEffect(() => {\r\n\r\n  }, [gameObject]);\r\n\r\n  async function fetchAllGames() {\r\n    let allGames = await FetchAllGames();\r\n    if (allGames !== null) {\r\n      setAllGames(allGames);\r\n    } else {\r\n      alert('Failed to fetch games');\r\n      setAllGames([]);\r\n    }\r\n  }\r\n\r\n  async function fetchGame() {\r\n    let game = await FetchGame(selectedGameId);\r\n    if (game !== null) {\r\n      setGameObject(\r\n        {\r\n          name: game.name,\r\n          gameState: game.gameState,\r\n          gameId: game.gameId,\r\n          startTime: game.startTime,\r\n          endTime: game.endTime,\r\n          maxNumberOfPlayers: game.maxNumberOfPlayers,\r\n          description: game.description\r\n        }\r\n      );\r\n    } else {\r\n      alert('Failed to fetch games');\r\n      setGameObject({});\r\n    }\r\n  }\r\n\r\n  async function editGame() {\r\n    let editGameResponse = await UpdateGame(gameObject);\r\n    if (editGameResponse.status === 200) {\r\n      props.history.push(\"/admin\");\r\n    } else if (editGameResponse.status === 400) {\r\n      alert(\"Game name must be unique!\");\r\n    } else {\r\n      alert(\"Something went wrong while updating the game.\");\r\n    }\r\n  }\r\n\r\n  const onGameNameChange = ev => {\r\n    let currentGameName = ev.target.value;\r\n    if (currentGameName.length < 4) {\r\n      setValidGameName(false);\r\n    }\r\n    else {\r\n      setGameObject((prevState) => ({\r\n        ...prevState,\r\n        name: currentGameName\r\n      }));\r\n      setValidGameName(true);\r\n    }\r\n  }\r\n\r\n  const onGameDescriptionChange = ev => {\r\n    let currentGameDescription = ev.target.value;\r\n    if (currentGameDescription.length < 4) {\r\n      setValidGameDescription(false);\r\n    }\r\n    else {\r\n      setGameObject((prevState) => ({\r\n        ...prevState,\r\n        description: currentGameDescription\r\n      }));\r\n      setValidGameDescription(true);\r\n    }\r\n  }\r\n\r\n  const onStartTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setGameObject((prevState) => ({\r\n      ...prevState,\r\n      startTime: time\r\n    }));\r\n  }\r\n\r\n  const onEndTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setGameObject((prevState) => ({\r\n      ...prevState,\r\n      endTime: time\r\n    }));\r\n  }\r\n\r\n  const onSizeChange = ev => {\r\n    let numPlayers = ev.target.value;\r\n    if (numPlayers > 0) {\r\n      setGameObject((prevState) => ({\r\n        ...prevState,\r\n        maxNumberOfPlayers: numPlayers\r\n      }));\r\n    }\r\n  }\r\n\r\n  function handleChangeGameToUpdate(ev) {\r\n    let selectedGame = ev.target.value;\r\n    if (selectedGame !== \"0\") {\r\n      setSelectedGameId(selectedGame)\r\n      setGameObject({})\r\n    }\r\n    else {\r\n      setSelectedGameId(null);\r\n    }\r\n  }\r\n\r\n  function isEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (obj.hasOwnProperty(prop))\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"home\">\r\n        <div className=\"container\">\r\n          <Header />\r\n          <GameMenu />\r\n          <h1>Edit game</h1>\r\n          <br />\r\n          <Form.Group>\r\n\r\n            <Form.Control\r\n              onChange={handleChangeGameToUpdate}\r\n              className=\"mb-4\"\r\n              as=\"select\">\r\n              <option value=\"0\">Select game...</option>\r\n              {allGames.filter(game => game.gameState !== 'COMPLETED').map(filteredGame => (\r\n                <option key={filteredGame.gameId} value={filteredGame.gameId}>\r\n                  {filteredGame.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n\r\n            {selectedGameId !== null && !isEmpty(gameObject) ?\r\n              <div>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter game name...\"\r\n                  defaultValue={gameObject.name}\r\n                  onChange={onGameNameChange} />\r\n                <br />\r\n                <Form.Control\r\n                  placeholder=\"Enter game description...\"\r\n                  as=\"textarea\"\r\n                  defaultValue={gameObject.description}\r\n                  rows={3}\r\n                  onChange={onGameDescriptionChange} />\r\n                <br />\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  label=\"Start time\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue={gameObject.startTime.substring(0, 16)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n\r\n                  onChange={onStartTimeChange}\r\n                />\r\n                <br />  <br />\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  label=\"End time\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue={gameObject.endTime.substring(0, 16)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={onEndTimeChange}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  defaultValue={gameObject.maxNumberOfPlayers}\r\n                  size=\"sm\"\r\n                  onChange={onSizeChange}\r\n                  placeholder=\"Max number of players...\">\r\n\r\n                </Form.Control>\r\n                <br /> <br />\r\n                <Button\r\n                  onClick={editGame}>Edit</Button>\r\n              </div>\r\n              : null}\r\n          </Form.Group>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default EditGame;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\RegisterPhone.js",["203","204","205"],"import React, { useContext } from \"react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport firebase from \"../../utils/firebase.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { AuthContext } from \"../../utils/Auth.js\";\r\nimport { storePhone } from \"../../utils/dbstorage.js\";\r\nimport HeaderOutside from \"../StylingComponents/HeaderOutside\";\r\n\r\nconst RegisterPhone = ({ history }) => {\r\n\r\n    const handleRegister = async event => {\r\n        event.preventDefault();\r\n        const { phone } = event.target.elements;\r\n        storePhone(phone.value);\r\n    }\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    return (\r\n        <>\r\n            <HeaderOutside />\r\n            <section className=\"login-register\">\r\n                <div className=\"container\">\r\n                    <h1>Register Phone</h1>\r\n                    <Form onSubmit={handleRegister} name=\"loginForm\">\r\n                        <Form.Group controlId=\"formPhone\">\r\n                            <Form.Label>Phone Number: </Form.Label>\r\n                            <Form.Control name=\"phone\" type=\"tel\" required />\r\n                        </Form.Group>\r\n                        <button type=\"submit\">Register</button>\r\n                        <Link to=\"/registerphone\">\r\n                            <button>Cancel</button>\r\n                        </Link>\r\n                    </Form>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(RegisterPhone);","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteZombie.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\PlayerState.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteHuman.js",["206","207"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { FetchPlayer } from '../../utils/PlayerStorage';\r\nimport Header from '../StylingComponents/Header';\r\n\r\nconst BiteHuman = ({history}) => {\r\n\r\n    let gameId = localStorage.getItem('Game ID');\r\n    let userId = localStorage.getItem('User ID');\r\n\r\n    const [currentPlayer, setCurrentPlayer] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCurrentPlayer();\r\n    }, [])\r\n\r\n    async function fetchCurrentPlayer() {\r\n        const response = await FetchPlayer(gameId, userId);\r\n        if (response !== null) {\r\n            setCurrentPlayer(response);\r\n        } else {\r\n            alert(\"Could not find Player object.\");\r\n        }\r\n    }\r\n\r\n\r\n    if (currentPlayer.faction === 'HUMAN') {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h2>BITE CODE</h2>\r\n                <div id=\"biteHuman\">{currentPlayer.biteCode}</div>\r\n            </div>\r\n        )\r\n    } else if (currentPlayer.faction === 'ZOMBIE') {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div id=\"codeEntryContainer\">\r\n                    <h2>BITE CODE ENTRY</h2>\r\n                    <input type=\"text\" placeholder=\"CODE-HERE\" />\r\n                    <br/>\r\n                    <button>Make Zombie</button>\r\n                    <button>Kill</button>\r\n                </div>\r\n        \r\n                <br/>\r\n        \r\n                <div id=\"killContainer\">\r\n                    <input type=\"text\" placeholder=\"Coordinates (auto)\" />\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Victim Description\" />\r\n                    <br/>\r\n                    <button>Submit</button>\r\n                    <button>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h3>Something went wrong...</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BiteHuman;\r\n\r\n\r\n\r\n\r\n/* class BiteHuman extends Component {\r\n\r\n    state = {\r\n        details: []\r\n    };\r\n\r\n    componentDidMount() {\r\n      fetch('/api/fetch/player/1')\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n              this.setState({details: data})\r\n          })\r\n          .catch(console.log);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h2>BITE CODE</h2>\r\n                <div id=\"biteHuman\">{this.state.details.biteCode}</div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BiteHuman; */","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\Home.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\LandingPage.js",["208","209"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Phone.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\Auth.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\AdminCreateGame.js",["210"],"import React, { useState } from \"react\";\r\nimport Header from \"../StylingComponents/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { CreateGame } from \"../../utils/GameStorage\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameMenu from \"../StylingComponents/GameMenu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst AdminCreateGame = (props) => {\r\n    const [validGameName, setValidGameName] = useState(false);\r\n    const [validGameDescription, setValidGameDescription] = useState(false);\r\n    const [gameObject, setGameObject] = useState(\r\n        {\r\n            name: \"\",\r\n            gameState: \"PREPARATION\",\r\n            startTime: \"2021-01-01T08:00:00.000+00:00\",\r\n            endTime: \"2021-01-02T08:00:00.000+00:00\",\r\n            maxNumberOfPlayers: 50,\r\n            description: \"\"\r\n        })\r\n\r\n    async function createGame() {\r\n        if (validGameDescription === true && validGameName === true) {\r\n            let createGameResponse = await CreateGame(gameObject);\r\n            if (createGameResponse.status === 201) {\r\n                props.history.push(\"/currentgames\");\r\n            } else if (createGameResponse.status === 400) {\r\n                alert(\"Game name must be unique!\");\r\n            } else {\r\n                alert(\"Something went wrong while creating the game.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const onGameNameChange = ev => {\r\n        let currentGameName = ev.target.value;\r\n        if (currentGameName.length < 4) {\r\n            setValidGameName(false);\r\n        }\r\n        else {\r\n            setGameObject((prevState) => ({\r\n                ...prevState,\r\n                name: currentGameName\r\n            }));\r\n            setValidGameName(true);\r\n        }\r\n    }\r\n\r\n    const onGameDescriptionChange = ev => {\r\n        let currentGameDescription = ev.target.value;\r\n        if (currentGameDescription.length < 4) {\r\n            setValidGameDescription(false);\r\n        }\r\n        else {\r\n            setGameObject((prevState) => ({\r\n                ...prevState,\r\n                description: currentGameDescription\r\n            }));\r\n            setValidGameDescription(true);\r\n        }\r\n    }\r\n\r\n    const onStartTimeChange = ev => {\r\n        let time = ev.target.value;\r\n        setGameObject((prevState) => ({\r\n            ...prevState,\r\n            startTime: time\r\n        }));\r\n    }\r\n\r\n    const onEndTimeChange = ev => {\r\n        let time = ev.target.value;\r\n        setGameObject((prevState) => ({\r\n            ...prevState,\r\n            endTime: time\r\n        }));\r\n    }\r\n\r\n    const onSizeChange = ev => {\r\n        let numPlayers = ev.target.value;\r\n        if (numPlayers > 0) {\r\n            setGameObject((prevState) => ({\r\n                ...prevState,\r\n                maxNumberOfPlayers: numPlayers\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"home\">\r\n                <div className=\"container\">\r\n                    <Header />\r\n                    <GameMenu />\r\n                    <h1>Create game</h1>\r\n                    <br />\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter game name...\" onChange={onGameNameChange} />\r\n                        <br />\r\n                        <Form.Control placeholder=\"Enter game description...\" as=\"textarea\" rows={3} onChange={onGameDescriptionChange} />\r\n                        <br />\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            label=\"Start time\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue=\"2021-01-01T08:00\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={onStartTimeChange}\r\n                        />\r\n                        <br />  <br />\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            label=\"End time\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue=\"2021-01-02T08:00\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={onEndTimeChange}\r\n                        />\r\n                        <br />\r\n\r\n                        <br />\r\n                        <Form.Control type=\"number\" size=\"sm\" onChange={onSizeChange} placeholder=\"Max number of players...\">\r\n\r\n                        </Form.Control>\r\n                        <br /> <br />\r\n                        <Button disabled={!validGameName || !validGameDescription} onClick={createGame}>Create</Button>\r\n                    </Form.Group>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\nexport default AdminCreateGame;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\Admin.js",["211"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\ChooseFaction.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\CurrentGames.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadCreate.js",["212","213"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadDetail.js",["214","215","216","217","218"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadList.js",["219","220","221"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\MapComponents\\MainMap.js",["222"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\firebase.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\dbstorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\localstorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Header.js",["223"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css';\r\nimport GameMenu from './GameMenu';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <div id=\"headerContainer\">\r\n                <div id=\"logoContainer\">\r\n                    <img src=\"zombie_logo.jpg\" alt=\"zombie\" />\r\n                </div>\r\n\r\n                <div id=\"gameTitle\">Humans vs Zombies</div>\r\n\r\n                <div id=\"gameMenu\"><GameMenu /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\HeaderOutside.js",["224","225"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css';\r\nimport firebase from '../../utils/firebase'\r\nimport { clearUser } from \"../../utils/localstorage\";\r\n\r\nconst HeaderOutside = () => {\r\n\r\n    const handleSignOut = () => {\r\n        firebase.auth().signOut()\r\n        clearUser();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"headerContainer\">\r\n                <div id=\"logoContainer\">\r\n                    <img src=\"zombie_logo.jpg\" alt=\"zombie\" />\r\n                </div>\r\n\r\n                <div id=\"gameTitle\">Humans vs Zombies</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderOutside;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NavBar.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\GameMenu.js",["226","227","228","229"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Modal from './Modal';\r\nimport firebase from '../../utils/firebase'\r\nimport { clearUser } from \"../../utils/localstorage\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { FetchPlayer } from '../../utils/PlayerStorage';\r\n\r\nconst BUTTON_WRAPPER_STYLES = {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    backgroundColor: 'rgb(221, 221, 221)',\r\n    height: '60px',\r\n    width: '60px'\r\n}\r\n\r\nconst GameMenu = ({history}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleSignOut = () => {\r\n        firebase.auth().signOut()\r\n        clearUser();\r\n    }\r\n\r\n\r\n    let gameId = localStorage.getItem('Game ID');\r\n    let userId = localStorage.getItem('User ID');\r\n\r\n    const [currentPlayer, setCurrentPlayer] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCurrentPlayer();\r\n    }, [])\r\n\r\n    async function fetchCurrentPlayer() {\r\n        const response = FetchPlayer(gameId, userId);\r\n        if (response !== null) {\r\n            setCurrentPlayer(response);\r\n        }else {\r\n            alert('Could not fetch current player.');\r\n            setCurrentPlayer({});\r\n        }\r\n    }\r\n\r\n\r\n    function handleBitePage() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        }\r\n    }\r\n\r\n    function showPosition(position) {\r\n        let currentLatitude = position.coords.latitude;\r\n        let currentLongitude = position.coords.longitude;\r\n        localStorage.setItem('Latitude', currentLatitude);\r\n        localStorage.setItem('Longitude', currentLongitude);\r\n        history.push('/bite');\r\n    }\r\n\r\n\r\n    // function handleBitePage() {\r\n    //     if (currentPlayer.faction === 'HUMAN') {\r\n    //         history.push('/bitehuman');\r\n    //     } else if (currentPlayer.faction === 'ZOMBIE') {\r\n    //         history.push('/bitezombie');\r\n    //     } else {\r\n    //         alert('Something went wrong, please try again.');\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={() => console.log(\"clicked\")}>\r\n                <Button variant=\"dark\" onClick={() => setIsOpen(true)}>Menu</Button>\r\n            \r\n                <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                    <Link to=\"landing\">\r\n                        <div>Landing/Rules</div>\r\n                    </Link>\r\n                    <Link to=\"map\">\r\n                        <div>Map</div>\r\n                    </Link>\r\n                    \r\n                    <div onClick={handleBitePage}>Bite</div>\r\n                    \r\n                    {/* <div onClick={handleBitePage}>Bite</div>\r\n                    <Link to=\"bitehuman\">\r\n                        <div>Bite Human</div>\r\n                    </Link>\r\n                    <Link to=\"bitezombie\">\r\n                        <div>Bite Zombie</div>\r\n                    </Link> */}\r\n                    <Link to=\"chat\">\r\n                        <div>Chat</div>\r\n                    </Link>\r\n                    <Link to=\"squads\">\r\n                        <div>Squads</div>\r\n                    </Link>\r\n                    <Link to=\"squaddetails\">\r\n                        <div>Squad Details</div>\r\n                    </Link>\r\n                    <Link to=\"admin\">\r\n                        <div>Admin</div>\r\n                    </Link>\r\n                    <div>\r\n                        <button onClick={handleSignOut}>Sign out</button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter (GameMenu);","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\ChatMessage.js",["230","231","232"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ButtonGroup, Button, Form } from 'react-bootstrap';\r\nimport { CreateMessage, GetBundleOfChatMessages, DeleteChatMessage, UpdateChatMessage } from '../../utils/ChatMessageStorage';\r\nimport { ThemeProvider, ChatList, ChatListItem, Avatar, Column, Subtitle, Row, Title, IconButton, SendIcon } from '@livechat/ui-kit'\r\n\r\n\r\nconst ChatMessage = props => {\r\n\r\n    let userId = localStorage.getItem('User ID');\r\n    let gameId = localStorage.getItem('Game ID');\r\n    let playerId = localStorage.getItem('Player ID');\r\n    let squadId = localStorage.getItem('Squad ID');\r\n    let playerFaction = localStorage.getItem('Faction');\r\n\r\n    const [chatRoom, setChatRoom] = useState('ALL');\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [validInput, setValidInput] = useState(false);\r\n    const [messageToUpdateId, setMessageToUpdateId] = useState(null);\r\n    const [isEditingMessage, setIsEditingMessage] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId !== 'null' && userId !== null) {\r\n            if (playerId !== 'null' && playerId !== null) {\r\n                if (gameId !== 'null' && gameId !== null) {\r\n                    if (playerFaction !== 'null' && playerFaction !== null) {\r\n                        let request = {\r\n                            gameId: gameId,\r\n                            playerId: playerId,\r\n                            squadId: null,\r\n                            faction: chatRoom\r\n                        }\r\n                        fetchMessages();\r\n                    } else {\r\n                        alert('Faction missing.');\r\n                        props.history.push(\"/landing\");\r\n                    }\r\n                } else {\r\n                    alert('Game ID missing.');\r\n                    props.history.push(\"/landing\");\r\n                }\r\n            } else {\r\n                alert('Player ID missing.');\r\n                props.history.push(\"/landing\");\r\n            }\r\n        } else {\r\n            alert('User ID missing.');\r\n            props.history.push(\"/landing\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, [refresh])\r\n\r\n    useInterval(() => {\r\n        fetchMessages()\r\n    }, 5000);\r\n\r\n    function useInterval(callback, delay) {\r\n        const savedCallback = useRef();\r\n\r\n        useEffect(() => {\r\n            savedCallback.current = callback;\r\n        }, [callback]);\r\n\r\n        useEffect(() => {\r\n            function tick() {\r\n                savedCallback.current();\r\n            }\r\n            if (delay !== null) {\r\n                let id = setInterval(tick, delay);\r\n                return () => clearInterval(id);\r\n            }\r\n        }, [delay]);\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        let request;\r\n        switch (chatRoom) {\r\n            case 'ALL':\r\n                request = {\r\n                    gameId: gameId,\r\n                    playerId: playerId,\r\n                    squadId: null,\r\n                    faction: 'ALL'\r\n                }\r\n                break;\r\n            case 'FACTION':\r\n                request = {\r\n                    gameId: gameId,\r\n                    playerId: playerId,\r\n                    squadId: null,\r\n                    faction: playerFaction\r\n                }\r\n                break;\r\n            case 'SQUAD':\r\n                request = {\r\n                    gameId: gameId,\r\n                    playerId: playerId,\r\n                    squadId: squadId,\r\n                    faction: playerFaction\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let messages = await GetBundleOfChatMessages(request);\r\n        if (messages !== null) {\r\n            setChatMessages(messages);\r\n        } else {\r\n            alert('Failed to fetch messages');\r\n            setChatMessages([]);\r\n        }\r\n    }\r\n\r\n    function selectChatRoom(ev) {\r\n        let room = ev.target.value;\r\n        setChatRoom(room);\r\n        handleCancelEditingMessage()\r\n        setRefresh(!refresh);\r\n    }\r\n\r\n    const onMsgChanged = ev => {\r\n        let currentInput = ev.target.value;\r\n        if (currentInput.length < 1) {\r\n            setValidInput(false);\r\n        }\r\n        else {\r\n            setValidInput(true);\r\n        }\r\n        setMessage(currentInput);\r\n    }\r\n\r\n    const prepareMessageObject = () => {\r\n        let msgObject;\r\n        let time = new Date().getTime();\r\n        switch (chatRoom) {\r\n            case 'ALL':\r\n                msgObject = {\r\n                    message: message,\r\n                    faction: 'ALL',\r\n                    gameId: gameId,\r\n                    playerId: playerId,\r\n                    squadId: 'null',\r\n                    timestamp: time\r\n                }\r\n                break;\r\n            case 'FACTION':\r\n                msgObject = {\r\n                    message: message,\r\n                    faction: playerFaction,\r\n                    gameId: gameId,\r\n                    playerId: playerId,\r\n                    squadId: 'null',\r\n                    timestamp: time\r\n                }\r\n                break;\r\n            case 'SQUAD':\r\n                msgObject = {\r\n                    message: message,\r\n                    faction: playerFaction,\r\n                    gameId: gameId,\r\n                    playerId: playerId,\r\n                    squadId: squadId,\r\n                    timestamp: time\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return msgObject;\r\n    }\r\n\r\n    async function sendMessage() {\r\n        let msg = prepareMessageObject();\r\n        const response = await CreateMessage(msg);\r\n        resetTextField()\r\n        if (response !== null) {\r\n            setRefresh(!refresh);\r\n        } else {\r\n            alert(\"Failed to send message! Failed to create.\")\r\n        }\r\n    }\r\n\r\n    function handleClickEnterToSendMessage(ev) {\r\n        console.log(ev.keyCode)\r\n        if (ev.keyCode === 13) {\r\n            sendMessage();\r\n        }\r\n    }\r\n\r\n    async function handleDeleteMessage(msgId) {\r\n        const response = await DeleteChatMessage(msgId);\r\n        if (response !== null) {\r\n            setRefresh(!refresh);\r\n        } else {\r\n            alert(\"Failed to send message! Failed to delete.\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function checkIfPlayerIsAuthor(msgAuthorId) {\r\n        if (playerId === msgAuthorId.toString()) {\r\n            return true;\r\n        }\r\n    }\r\n    function handleEditMessage(msgId) {\r\n        setMessageToUpdateId(msgId)\r\n        setIsEditingMessage(true)\r\n    }\r\n\r\n    function handleUpdateMessage(msgId) {\r\n        if (msgId === messageToUpdateId) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    function resetTextField() {\r\n        const textField = document.getElementById(\"messageInput\");\r\n        textField.value = \"\"\r\n    }\r\n    async function sendUpdatedMessage() {\r\n        let updatedMesageObj = {\r\n            message: message,\r\n            chatMessageId: messageToUpdateId\r\n        }\r\n        let response = await UpdateChatMessage(updatedMesageObj)\r\n\r\n        if (response !== null) {\r\n            setIsEditingMessage(false);\r\n            setRefresh(!refresh);\r\n            setMessageToUpdateId(null)\r\n        } else {\r\n            alert(\"Failed to edit message! Failed to delete.\")\r\n        }\r\n    }\r\n\r\n    function handleCancelEditingMessage() {\r\n        setIsEditingMessage(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ButtonGroup >\r\n                <Button variant=\"dark\"\r\n                    onClick={selectChatRoom}\r\n                    value=\"ALL\" >Global</Button>\r\n                <Button variant=\"dark\"\r\n                    onClick={selectChatRoom}\r\n                    value=\"FACTION\">Faction</Button>\r\n                <Button variant=\"dark\"\r\n                    disabled={squadId === 'null'}\r\n                    onClick={selectChatRoom}\r\n                    value=\"SQUAD\">Squad</Button>\r\n            </ButtonGroup>\r\n            <br />\r\n            <ThemeProvider>\r\n                <ChatList >\r\n                    {chatRoom === \"FACTION\" ?\r\n                        <Subtitle>{playerFaction} CHAT</Subtitle>\r\n                        : null\r\n                    }\r\n                    {chatMessages.map((chatMessage) =>\r\n                        <ChatListItem key={chatMessage.chatMessageId}>\r\n                            <Avatar imgUrl=\"https://livechat.s3.amazonaws.com/default/avatars/male_8.jpg\" />\r\n                            <Column fill>\r\n                                <Row>\r\n                                    <Title>{chatMessage.username}</Title>\r\n\r\n                                    {chatRoom === \"SQUAD\" ?\r\n                                        <Subtitle>{chatMessage.squadRank}</Subtitle>\r\n                                        :\r\n                                        chatRoom === \"FACTION\" && chatMessage.alive ?\r\n                                            <Subtitle> Alive </Subtitle>\r\n                                            : null}\r\n\r\n                                    <Subtitle>{chatMessage.stringTimestamp}</Subtitle>\r\n                                </Row>\r\n                                <Subtitle >\r\n                                    <div>\r\n                                      \r\n                                        {handleUpdateMessage(chatMessage.chatMessageId) && isEditingMessage ?\r\n                                            <Form.Group>\r\n                                                <Form.Control type=\"text\"\r\n                                                    placeholder=\"Edit your message...\"\r\n                                                    onChange={onMsgChanged}\r\n                                                    defaultValue={chatMessage.message} />\r\n                                                <Button variant=\"info\"\r\n                                                    size=\"sm\"\r\n                                                    onClick={sendUpdatedMessage}>Update</Button>\r\n                                                <Button className=\"m-2\"\r\n                                                    size=\"sm\"\r\n                                                    variant=\"secondary\"\r\n                                                    onClick={handleCancelEditingMessage}>Cancel</Button>\r\n                                            </Form.Group>\r\n                                            : chatMessage.message\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        {checkIfPlayerIsAuthor(chatMessage.playerId) && !isEditingMessage ?\r\n                                            <Subtitle >\r\n                                                <Button id=\"sendMessage\"\r\n                                                    className=\"m-1\"\r\n                                                    variant=\"secondary\"\r\n                                                    size=\"sm\"\r\n                                                    onClick={() => handleEditMessage(chatMessage.chatMessageId)}> Edit</Button>\r\n                                                <Button variant=\"danger\"\r\n                                                    size=\"sm\"\r\n                                                    onClick={() => handleDeleteMessage(chatMessage.chatMessageId)}> Delete</Button>\r\n\r\n                                            </Subtitle>\r\n                                            : null}\r\n                                    </div>\r\n                                </Subtitle>\r\n                            </Column>\r\n                        </ChatListItem>\r\n                    )}\r\n                </ChatList>\r\n\r\n                <Form.Group>\r\n\r\n                    <Form.Control onKeyUp={handleClickEnterToSendMessage} id=\"messageInput\" type=\"text\" placeholder=\"Enter a message\" onChange={onMsgChanged} />\r\n\r\n                    <IconButton disabled={!validInput} onClick={sendMessage}>\r\n                        <SendIcon />\r\n                    </IconButton>\r\n                </Form.Group>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n};\r\nexport default ChatMessage;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\gamedbstorage.js",["233"],"export async function getPlayerInfo() {\r\n    const token = localStorage.getItem('jwt');\r\n    const response = await fetch('/api/fetch/player/all', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n\r\n    const status = await response.status\r\n    if (status === 200) {\r\n        const user = await response.json()\r\n    }\r\n    return status;\r\n}","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\squadstorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\baseUrl.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Modal.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PlayerStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\Chat.js",["234","235","236"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../StylingComponents/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst Chat = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"home\">\r\n                <div className=\"container\">\r\n                    <Header />\r\n                    <ChatMessage />\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\CreateMissionMarker.js",["237"],"import { TextField } from \"@material-ui/core\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport React, { useState } from \"react\";\r\nimport Header from '../StylingComponents/Header';\r\nimport NavBar from \"../StylingComponents/NavBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CreateMission } from '../../utils/markerStorage'\r\nimport MainMap from \"../MapComponents/MainMap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst CreateMissionMarker = (props) => {\r\n\r\n  const [validMissionName, setValidMissionName] = useState(false);\r\n  const [missionObject, setMissionObject] = useState(\r\n    {\r\n      name: \"\",\r\n      startTime: \"2021-01-01T08:00:00.000+00:00\",\r\n      endTime: \"2021-01-02T08:00:00.000+00:00\"\r\n    })\r\n\r\n  async function createMission() {\r\n    if (validMissionName === true) {\r\n      let createMissionResponse = await CreateMission(missionObject);\r\n      if (createMissionResponse.status === 201) {\r\n        props.history.push(\"/missions\");\r\n      } else if (createMissionResponse.status === 400) {\r\n        alert(\"Mission name must be unique!\");\r\n      } else {\r\n        alert(\"Something went wrong while creating the mission.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const onMissionNameChange = ev => {\r\n    let currentMissionName = ev.target.value;\r\n    if (currentMissionName.length < 4) {\r\n      setValidMissionName(false);\r\n    }\r\n    else {\r\n      setMissionObject((prevState) => ({\r\n        ...prevState,\r\n        name: currentMissionName\r\n      }));\r\n      setValidMissionName(true);\r\n    }\r\n  }\r\n\r\n  const onStartTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setMissionObject((prevState) => ({\r\n      ...prevState,\r\n      startTime: time\r\n    }));\r\n  }\r\n\r\n  const onEndTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setMissionObject((prevState) => ({\r\n      ...prevState,\r\n      endTime: time\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <NavBar />\r\n      <section className=\"home\">\r\n        <div className=\"container\">\r\n          <h1>Create Mission Marker</h1>\r\n          <Form.Group>\r\n            <Form.Control type=\"text\" placeholder=\"Enter mission name\" onChange={onMissionNameChange} />\r\n            <br />\r\n            <Form.Control type=\"text\" placeholder=\"Coordinates\"/>\r\n            <br />\r\n            <MainMap />\r\n            <TextField\r\n              id=\"datetime-local\"\r\n              label=\"Start time\"\r\n              type=\"datetime-local\"\r\n              defaultValue=\"2021-01-01T08:00\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={onStartTimeChange}\r\n            />\r\n            <br />  <br />\r\n            <TextField\r\n              id=\"datetime-local\"\r\n              label=\"End time\"\r\n              type=\"datetime-local\"\r\n              defaultValue=\"2021-01-02T08:00\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={onEndTimeChange}\r\n            />\r\n            <br />\r\n            <br /><br />\r\n            <Button disabled={!validMissionName} onClick={createMission}>Create</Button><Link to=\"admin\"><Button>Cancel</Button></Link>\r\n          </Form.Group>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateMissionMarker;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\Bite.js",["238","239","240","241"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\GameStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\SquadMemberStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\markerStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\ChatMessageStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\KillStorage.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":3,"column":42,"nodeType":"248","messageId":"249","endLine":3,"endColumn":48},{"ruleId":"246","severity":1,"message":"250","line":8,"column":8,"nodeType":"248","messageId":"249","endLine":8,"endColumn":13},{"ruleId":"246","severity":1,"message":"251","line":11,"column":10,"nodeType":"248","messageId":"249","endLine":11,"endColumn":23},{"ruleId":"246","severity":1,"message":"252","line":12,"column":10,"nodeType":"248","messageId":"249","endLine":12,"endColumn":30},{"ruleId":"253","severity":1,"message":"254","line":28,"column":6,"nodeType":"255","endLine":28,"endColumn":22,"suggestions":"256"},{"ruleId":"246","severity":1,"message":"257","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":18},{"ruleId":"246","severity":1,"message":"258","line":3,"column":8,"nodeType":"248","messageId":"249","endLine":3,"endColumn":16},{"ruleId":"246","severity":1,"message":"259","line":18,"column":13,"nodeType":"248","messageId":"249","endLine":18,"endColumn":24},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"261","line":14,"column":8,"nodeType":"255","endLine":14,"endColumn":10,"suggestions":"262"},{"ruleId":"246","severity":1,"message":"263","line":7,"column":8,"nodeType":"248","messageId":"249","endLine":7,"endColumn":16},{"ruleId":"253","severity":1,"message":"264","line":51,"column":8,"nodeType":"255","endLine":51,"endColumn":10,"suggestions":"265"},{"ruleId":"246","severity":1,"message":"266","line":10,"column":7,"nodeType":"248","messageId":"249","endLine":10,"endColumn":16},{"ruleId":"253","severity":1,"message":"267","line":13,"column":8,"nodeType":"255","endLine":13,"endColumn":10,"suggestions":"268"},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"261","line":20,"column":8,"nodeType":"255","endLine":20,"endColumn":10,"suggestions":"269"},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"270","line":9,"column":9,"nodeType":"248","messageId":"249","endLine":9,"endColumn":17},{"ruleId":"253","severity":1,"message":"271","line":17,"column":8,"nodeType":"255","endLine":17,"endColumn":10,"suggestions":"272"},{"ruleId":"253","severity":1,"message":"273","line":54,"column":8,"nodeType":"255","endLine":54,"endColumn":10,"suggestions":"274"},{"ruleId":"253","severity":1,"message":"261","line":78,"column":8,"nodeType":"255","endLine":78,"endColumn":10,"suggestions":"275"},{"ruleId":"253","severity":1,"message":"276","line":19,"column":8,"nodeType":"255","endLine":19,"endColumn":10,"suggestions":"277"},{"ruleId":"253","severity":1,"message":"261","line":43,"column":8,"nodeType":"255","endLine":43,"endColumn":10,"suggestions":"278"},{"ruleId":"253","severity":1,"message":"279","line":59,"column":8,"nodeType":"255","endLine":59,"endColumn":10,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":34,"column":26,"nodeType":"283","messageId":"284","endLine":34,"endColumn":28},{"ruleId":"246","severity":1,"message":"285","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":14},{"ruleId":"246","severity":1,"message":"285","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":14},{"ruleId":"246","severity":1,"message":"286","line":9,"column":11,"nodeType":"248","messageId":"249","endLine":9,"endColumn":24},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"287","line":9,"column":7,"nodeType":"248","messageId":"249","endLine":9,"endColumn":28},{"ruleId":"246","severity":1,"message":"288","line":29,"column":12,"nodeType":"248","messageId":"249","endLine":29,"endColumn":25},{"ruleId":"253","severity":1,"message":"261","line":33,"column":8,"nodeType":"255","endLine":33,"endColumn":10,"suggestions":"289"},{"ruleId":"246","severity":1,"message":"290","line":30,"column":29,"nodeType":"248","messageId":"249","endLine":30,"endColumn":36},{"ruleId":"253","severity":1,"message":"291","line":53,"column":8,"nodeType":"255","endLine":53,"endColumn":10,"suggestions":"292"},{"ruleId":"253","severity":1,"message":"293","line":57,"column":8,"nodeType":"255","endLine":57,"endColumn":17,"suggestions":"294"},{"ruleId":"246","severity":1,"message":"295","line":12,"column":15,"nodeType":"248","messageId":"249","endLine":12,"endColumn":19},{"ruleId":"246","severity":1,"message":"296","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"297","line":1,"column":28,"nodeType":"248","messageId":"249","endLine":1,"endColumn":36},{"ruleId":"246","severity":1,"message":"266","line":7,"column":7,"nodeType":"248","messageId":"249","endLine":7,"endColumn":16},{"ruleId":"246","severity":1,"message":"266","line":11,"column":7,"nodeType":"248","messageId":"249","endLine":11,"endColumn":16},{"ruleId":"246","severity":1,"message":"298","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":21},{"ruleId":"253","severity":1,"message":"261","line":31,"column":8,"nodeType":"255","endLine":31,"endColumn":10,"suggestions":"299"},{"ruleId":"253","severity":1,"message":"300","line":35,"column":8,"nodeType":"255","endLine":35,"endColumn":29,"suggestions":"301"},{"ruleId":"253","severity":1,"message":"302","line":39,"column":8,"nodeType":"255","endLine":39,"endColumn":23,"suggestions":"303"},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Phone' is defined but never used.","'validGameName' is assigned a value but never used.","'validGameDescription' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'Redirect' is defined but never used.","'firebase' is defined but never used.","'currentUser' is assigned a value but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCurrentPlayer'. Either include it or remove the dependency array.",["307"],"'GameMenu' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["308"],"'useStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchCurrentUser'. Either include it or remove the dependency array.",["309"],["310"],"'playerId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSquadMembers'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'fetchSquad'. Either include it or remove the dependency array.",["312"],["313"],"React Hook useEffect has a missing dependency: 'fetchSquads'. Either include it or remove the dependency array.",["314"],["315"],"React Hook useEffect has a missing dependency: 'fetchSquadMember'. Either include it or remove the dependency array.",["316"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'handleSignOut' is assigned a value but never used.","'BUTTON_WRAPPER_STYLES' is assigned a value but never used.","'currentPlayer' is assigned a value but never used.",["317"],"'request' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatRoom', 'fetchMessages', 'gameId', 'playerFaction', 'playerId', 'props.history', and 'userId'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["319"],"'user' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FetchPlayer' is defined but never used.",["320"],"React Hook useEffect has a missing dependency: 'fetchCurrentVictim'. Either include it or remove the dependency array.",["321"],"React Hook useEffect has a missing dependency: 'fetchCurrentVictimUser'. Either include it or remove the dependency array.",["322"],"no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"325","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"325","fix":"336"},{"desc":"337","fix":"338"},{"desc":"325","fix":"339"},{"desc":"340","fix":"341"},{"desc":"325","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"325","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},"Update the dependencies array to be: [fetchGame, selectedGameId]",{"range":"352","text":"353"},"Update the dependencies array to be: [fetchCurrentPlayer]",{"range":"354","text":"355"},"Update the dependencies array to be: [props.history]",{"range":"356","text":"357"},"Update the dependencies array to be: [fetchCurrentUser]",{"range":"358","text":"359"},{"range":"360","text":"355"},"Update the dependencies array to be: [fetchSquadMembers]",{"range":"361","text":"362"},"Update the dependencies array to be: [fetchSquad]",{"range":"363","text":"364"},{"range":"365","text":"355"},"Update the dependencies array to be: [fetchSquads]",{"range":"366","text":"367"},{"range":"368","text":"355"},"Update the dependencies array to be: [fetchSquadMember]",{"range":"369","text":"370"},{"range":"371","text":"355"},"Update the dependencies array to be: [chatRoom, fetchMessages, gameId, playerFaction, playerId, props.history, userId]",{"range":"372","text":"373"},"Update the dependencies array to be: [fetchMessages, refresh]",{"range":"374","text":"375"},{"range":"376","text":"355"},"Update the dependencies array to be: [fetchCurrentVictim, validBiteCodeLength]",{"range":"377","text":"378"},"Update the dependencies array to be: [currentVictim, fetchCurrentVictimUser]",{"range":"379","text":"380"},[917,933],"[fetchGame, selectedGameId]",[441,443],"[fetchCurrentPlayer]",[2350,2352],"[props.history]",[352,354],"[fetchCurrentUser]",[766,768],[681,683],"[fetchSquadMembers]",[1854,1856],"[fetchSquad]",[2467,2469],[796,798],"[fetchSquads]",[1438,1440],[1852,1854],"[fetchSquadMember]",[934,936],[2291,2293],"[chatRoom, fetchMessages, gameId, playerFaction, playerId, props.history, userId]",[2355,2364],"[fetchMessages, refresh]",[1509,1511],[1578,1599],"[fetchCurrentVictim, validBiteCodeLength]",[1674,1689],"[currentVictim, fetchCurrentVictimUser]"]