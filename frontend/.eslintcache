[{"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\index.js":"1","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\App.js":"3","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\Auth.js":"4","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NotFound.js":"5","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PrivateRoute.js":"6","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Register.js":"7","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\Admin.js":"8","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\PlayerState.js":"9","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\AdminCreateGame.js":"10","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\Bite.js":"11","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteHuman.js":"12","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteZombie.js":"13","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\CurrentGames.js":"14","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadCreate.js":"15","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadList.js":"16","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\Chat.js":"17","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\RegisterPhone.js":"18","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\EditGame.js":"19","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Phone.js":"20","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Login.js":"21","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\CreateMissionMarker.js":"22","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\EditMissionMarker.js":"23","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\ChooseFaction.js":"24","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\Missions.js":"25","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\GameMap.js":"26","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\Home.js":"27","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\LandingPage.js":"28","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadDetail.js":"29","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\firebase.js":"30","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\dbstorage.js":"31","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\localstorage.js":"32","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Header.js":"33","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\GameMenu.js":"34","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\HeaderOutside.js":"35","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PlayerStorage.js":"36","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\gamedbstorage.js":"37","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\squadstorage.js":"38","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\ChatMessage.js":"39","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NavBar.js":"40","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\GameStorage.js":"41","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\SquadMemberStorage.js":"42","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\missionStorage.js":"43","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\MapComponents\\MainMap.js":"44","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\squadCheckinStorage.js":"45","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\baseUrl.js":"46","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Modal.js":"47","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\ChatMessageStorage.js":"48","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\KillStorage.js":"49"},{"size":517,"mtime":1608561367131,"results":"50","hashOfConfig":"51"},{"size":375,"mtime":1608561367132,"results":"52","hashOfConfig":"51"},{"size":3865,"mtime":1609847474154,"results":"53","hashOfConfig":"51"},{"size":651,"mtime":1608561367134,"results":"54","hashOfConfig":"51"},{"size":336,"mtime":1608623502708,"results":"55","hashOfConfig":"51"},{"size":577,"mtime":1608561367134,"results":"56","hashOfConfig":"51"},{"size":4441,"mtime":1609852746446,"results":"57","hashOfConfig":"51"},{"size":2107,"mtime":1609852746444,"results":"58","hashOfConfig":"51"},{"size":694,"mtime":1608561367119,"results":"59","hashOfConfig":"51"},{"size":5254,"mtime":1608712835684,"results":"60","hashOfConfig":"51"},{"size":9592,"mtime":1609852746447,"results":"61","hashOfConfig":"51"},{"size":2613,"mtime":1609765736007,"results":"62","hashOfConfig":"51"},{"size":1067,"mtime":1608561367122,"results":"63","hashOfConfig":"51"},{"size":5730,"mtime":1609852746447,"results":"64","hashOfConfig":"51"},{"size":5525,"mtime":1609854703073,"results":"65","hashOfConfig":"51"},{"size":5376,"mtime":1609853754365,"results":"66","hashOfConfig":"51"},{"size":813,"mtime":1608720338091,"results":"67","hashOfConfig":"51"},{"size":2055,"mtime":1609847474159,"results":"68","hashOfConfig":"51"},{"size":7220,"mtime":1609847474156,"results":"69","hashOfConfig":"51"},{"size":1830,"mtime":1609847474158,"results":"70","hashOfConfig":"51"},{"size":2995,"mtime":1609852746445,"results":"71","hashOfConfig":"51"},{"size":7037,"mtime":1609847474155,"results":"72","hashOfConfig":"51"},{"size":11696,"mtime":1609847474157,"results":"73","hashOfConfig":"51"},{"size":1298,"mtime":1609852739001,"results":"74","hashOfConfig":"51"},{"size":2615,"mtime":1609847474160,"results":"75","hashOfConfig":"51"},{"size":605,"mtime":1609847474160,"results":"76","hashOfConfig":"51"},{"size":3663,"mtime":1609852739008,"results":"77","hashOfConfig":"51"},{"size":12124,"mtime":1609853074244,"results":"78","hashOfConfig":"51"},{"size":7100,"mtime":1609854658704,"results":"79","hashOfConfig":"51"},{"size":820,"mtime":1608561367136,"results":"80","hashOfConfig":"51"},{"size":3814,"mtime":1609852739057,"results":"81","hashOfConfig":"51"},{"size":602,"mtime":1609847474169,"results":"82","hashOfConfig":"51"},{"size":547,"mtime":1608712835698,"results":"83","hashOfConfig":"51"},{"size":3567,"mtime":1609852746451,"results":"84","hashOfConfig":"51"},{"size":671,"mtime":1608623502695,"results":"85","hashOfConfig":"51"},{"size":1732,"mtime":1609765736058,"results":"86","hashOfConfig":"51"},{"size":406,"mtime":1609765736078,"results":"87","hashOfConfig":"51"},{"size":773,"mtime":1609765736098,"results":"88","hashOfConfig":"51"},{"size":12435,"mtime":1609853147113,"results":"89","hashOfConfig":"51"},{"size":891,"mtime":1608561367130,"results":"90","hashOfConfig":"51"},{"size":3056,"mtime":1609847474167,"results":"91","hashOfConfig":"51"},{"size":1989,"mtime":1609847474168,"results":"92","hashOfConfig":"51"},{"size":3144,"mtime":1609847474170,"results":"93","hashOfConfig":"51"},{"size":5139,"mtime":1609849038766,"results":"94","hashOfConfig":"51"},{"size":2834,"mtime":1609847474170,"results":"95","hashOfConfig":"51"},{"size":85,"mtime":1608561367135,"results":"96","hashOfConfig":"51"},{"size":1057,"mtime":1609852746452,"results":"97","hashOfConfig":"51"},{"size":3406,"mtime":1609847474166,"results":"98","hashOfConfig":"51"},{"size":455,"mtime":1609840501659,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"crhxuc",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"102"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\index.js",[],["216","217"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\App.js",["218"],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport Login from './components/AuthComponents/Login'\r\nimport Register from './components/AuthComponents/Register'\r\nimport Phone from './components/AuthComponents/Phone'\r\nimport RegisterPhone from './components/AuthComponents/RegisterPhone'\r\nimport Admin from './components/AdminComponents/Admin'\r\nimport EditGame from './components/AdminComponents/EditGame'\r\nimport PlayerState from './components/AdminComponents/PlayerState'\r\nimport Bite from './components/GameComponents/Bite'\r\nimport CreateMissionMarker from './components/AdminComponents/CreateMissionMarker'\r\nimport EditMissionMarker from './components/AdminComponents/EditMissionMarker'\r\nimport BiteHuman from './components/GameComponents/BiteHuman'\r\nimport BiteZombie from './components/GameComponents/BiteZombie'\r\nimport ChooseFaction from './components/GameComponents/ChooseFaction'\r\nimport CurrentGames from './components/GameComponents/CurrentGames'\r\nimport Home from './components/HomeComponents/Home'\r\nimport LandingPage from './components/HomeComponents/LandingPage'\r\nimport GameMap from './components/GameComponents/GameMap'\r\nimport SquadCreate from './components/SquadComponents/SquadCreate'\r\nimport SquadDetail from './components/SquadComponents/SquadDetail'\r\nimport SquadList from './components/SquadComponents/SquadList'\r\nimport NotFound from './components/StylingComponents/NotFound'\r\nimport { AuthProvider } from \"./utils/Auth\";\r\nimport './components/StylingComponents/Components.css'\r\nimport AdminCreateGame from './components/AdminComponents/AdminCreateGame'\r\nimport Missions from \"./components/GameComponents/Missions\";\r\nimport Chat from \"./components/ChatMessageComponents/Chat\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/phone\" component={Phone} />\r\n          <Route exact path=\"/registerphone\" component={RegisterPhone} />\r\n          <PrivateRoute exact path=\"/\" component={Home} />\r\n          <PrivateRoute exact path=\"/landing\" component={LandingPage} />\r\n          <PrivateRoute exact path=\"/bite\" component={Bite} />\r\n          <PrivateRoute exact path=\"/bitehuman\" component={BiteHuman} />\r\n          <PrivateRoute exact path=\"/bitezombie\" component={BiteZombie} />\r\n          <PrivateRoute exact path=\"/squads\" component={SquadList} />\r\n          <PrivateRoute exact path=\"/squaddetails\" component={SquadDetail} />\r\n          <PrivateRoute exact path=\"/createsquad\" component={SquadCreate} />\r\n          <PrivateRoute exact path=\"/currentgames\" component={CurrentGames} />\r\n          <PrivateRoute exact path=\"/admin\" component={Admin} />\r\n          <PrivateRoute exact path=\"/playerstate\" component={PlayerState} />\r\n          <PrivateRoute exact path=\"/map\" component={GameMap} />\r\n          <PrivateRoute exact path=\"/choosefaction\" component={ChooseFaction} />\r\n          <PrivateRoute exact path=\"/creategame\" component={AdminCreateGame} />\r\n          <PrivateRoute exact path=\"/create/missionmarker\" component={CreateMissionMarker} />\r\n          <PrivateRoute exact path=\"/edit/missionmarker\" component={EditMissionMarker} />\r\n          <PrivateRoute exact path=\"/editgame\" component={EditGame} />\r\n          <PrivateRoute exact path=\"/missions\" component={Missions} />\r\n          <PrivateRoute exact path=\"/chat\" component={Chat} />\r\n          <Route path='*'>\r\n            <NotFound header='Page not found' message='The page you requested does not exist' />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\Auth.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NotFound.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Register.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\Admin.js",["219"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\PlayerState.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\AdminCreateGame.js",["220"],"import React, { useState } from \"react\";\r\nimport Header from \"../StylingComponents/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { CreateGame } from \"../../utils/GameStorage\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameMenu from \"../StylingComponents/GameMenu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst AdminCreateGame = (props) => {\r\n    const [validGameName, setValidGameName] = useState(false);\r\n    const [validGameDescription, setValidGameDescription] = useState(false);\r\n    const [gameObject, setGameObject] = useState(\r\n        {\r\n            name: \"\",\r\n            gameState: \"PREPARATION\",\r\n            startTime: \"2021-01-01T08:00:00.000+00:00\",\r\n            endTime: \"2021-01-02T08:00:00.000+00:00\",\r\n            maxNumberOfPlayers: 50,\r\n            description: \"\"\r\n        })\r\n\r\n    async function createGame() {\r\n        if (validGameDescription === true && validGameName === true) {\r\n            let createGameResponse = await CreateGame(gameObject);\r\n            if (createGameResponse.status === 201) {\r\n                props.history.push(\"/currentgames\");\r\n            } else if (createGameResponse.status === 400) {\r\n                alert(\"Game name must be unique!\");\r\n            } else {\r\n                alert(\"Something went wrong while creating the game.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const onGameNameChange = ev => {\r\n        let currentGameName = ev.target.value;\r\n        if (currentGameName.length < 4) {\r\n            setValidGameName(false);\r\n        }\r\n        else {\r\n            setGameObject((prevState) => ({\r\n                ...prevState,\r\n                name: currentGameName\r\n            }));\r\n            setValidGameName(true);\r\n        }\r\n    }\r\n\r\n    const onGameDescriptionChange = ev => {\r\n        let currentGameDescription = ev.target.value;\r\n        if (currentGameDescription.length < 4) {\r\n            setValidGameDescription(false);\r\n        }\r\n        else {\r\n            setGameObject((prevState) => ({\r\n                ...prevState,\r\n                description: currentGameDescription\r\n            }));\r\n            setValidGameDescription(true);\r\n        }\r\n    }\r\n\r\n    const onStartTimeChange = ev => {\r\n        let time = ev.target.value;\r\n        setGameObject((prevState) => ({\r\n            ...prevState,\r\n            startTime: time\r\n        }));\r\n    }\r\n\r\n    const onEndTimeChange = ev => {\r\n        let time = ev.target.value;\r\n        setGameObject((prevState) => ({\r\n            ...prevState,\r\n            endTime: time\r\n        }));\r\n    }\r\n\r\n    const onSizeChange = ev => {\r\n        let numPlayers = ev.target.value;\r\n        if (numPlayers > 0) {\r\n            setGameObject((prevState) => ({\r\n                ...prevState,\r\n                maxNumberOfPlayers: numPlayers\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"home\">\r\n                <div className=\"container\">\r\n                    <Header />\r\n                    <GameMenu />\r\n                    <h1>Create game</h1>\r\n                    <br />\r\n                    <Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter game name...\" onChange={onGameNameChange} />\r\n                        <br />\r\n                        <Form.Control placeholder=\"Enter game description...\" as=\"textarea\" rows={3} onChange={onGameDescriptionChange} />\r\n                        <br />\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            label=\"Start time\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue=\"2021-01-01T08:00\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={onStartTimeChange}\r\n                        />\r\n                        <br />  <br />\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            label=\"End time\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue=\"2021-01-02T08:00\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={onEndTimeChange}\r\n                        />\r\n                        <br />\r\n\r\n                        <br />\r\n                        <Form.Control type=\"number\" size=\"sm\" onChange={onSizeChange} placeholder=\"Max number of players...\">\r\n\r\n                        </Form.Control>\r\n                        <br /> <br />\r\n                        <Button disabled={!validGameName || !validGameDescription} onClick={createGame}>Create</Button>\r\n                    </Form.Group>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\nexport default AdminCreateGame;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\Bite.js",["221","222","223","224"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteHuman.js",["225","226"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { FetchPlayer } from '../../utils/PlayerStorage';\r\nimport Header from '../StylingComponents/Header';\r\n\r\nconst BiteHuman = ({history}) => {\r\n\r\n    let gameId = localStorage.getItem('Game ID');\r\n    let userId = localStorage.getItem('User ID');\r\n\r\n    const [currentPlayer, setCurrentPlayer] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCurrentPlayer();\r\n    }, [])\r\n\r\n    async function fetchCurrentPlayer() {\r\n        const response = await FetchPlayer(gameId, userId);\r\n        if (response !== null) {\r\n            setCurrentPlayer(response);\r\n        } else {\r\n            alert(\"Could not find Player object.\");\r\n        }\r\n    }\r\n\r\n\r\n    if (currentPlayer.faction === 'HUMAN') {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h2>BITE CODE</h2>\r\n                <div id=\"biteHuman\">{currentPlayer.biteCode}</div>\r\n            </div>\r\n        )\r\n    } else if (currentPlayer.faction === 'ZOMBIE') {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div id=\"codeEntryContainer\">\r\n                    <h2>BITE CODE ENTRY</h2>\r\n                    <input type=\"text\" placeholder=\"CODE-HERE\" />\r\n                    <br/>\r\n                    <button>Make Zombie</button>\r\n                    <button>Kill</button>\r\n                </div>\r\n        \r\n                <br/>\r\n        \r\n                <div id=\"killContainer\">\r\n                    <input type=\"text\" placeholder=\"Coordinates (auto)\" />\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Victim Description\" />\r\n                    <br/>\r\n                    <button>Submit</button>\r\n                    <button>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h3>Something went wrong...</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BiteHuman;\r\n\r\n\r\n\r\n\r\n/* class BiteHuman extends Component {\r\n\r\n    state = {\r\n        details: []\r\n    };\r\n\r\n    componentDidMount() {\r\n      fetch('/api/fetch/player/1')\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n              this.setState({details: data})\r\n          })\r\n          .catch(console.log);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h2>BITE CODE</h2>\r\n                <div id=\"biteHuman\">{this.state.details.biteCode}</div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default BiteHuman; */","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\BiteZombie.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\CurrentGames.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadCreate.js",["227","228"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadList.js",["229","230","231","232","233"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\Chat.js",["234","235","236"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../StylingComponents/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst Chat = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"home\">\r\n                <div className=\"container\">\r\n                    <Header />\r\n                    <ChatMessage />\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\RegisterPhone.js",["237","238","239"],"import React, { useContext } from \"react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport firebase from \"../../utils/firebase.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { AuthContext } from \"../../utils/Auth.js\";\r\nimport { getUserInfo, storePhone } from \"../../utils/dbstorage.js\";\r\nimport HeaderOutside from \"../StylingComponents/HeaderOutside\";\r\n\r\nconst RegisterPhone = ({ history }) => {\r\n\r\n    let userId = localStorage.getItem(\"User ID\")\r\n    const isVerified = firebase.auth().currentUser.emailVerified;\r\n\r\n    const handleRegister = async event => {\r\n        event.preventDefault();\r\n        const { phone } = event.target.elements;\r\n        storePhone(userId, phone.value);\r\n        history.push('/');\r\n    }\r\n\r\n    function redirectToIndex() {\r\n        history.push('/');\r\n    }\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    return (\r\n        <>\r\n            {isVerified\r\n                ?\r\n                <>\r\n                    <HeaderOutside />\r\n                    <section className=\"login-register\">\r\n                        <div className=\"container\">\r\n                            <h1>Register Phone</h1>\r\n                            <Form onSubmit={handleRegister} name=\"loginForm\">\r\n                                <Form.Group controlId=\"formPhone\">\r\n                                    <Form.Label>Phone Number: </Form.Label>\r\n                                    <Form.Control name=\"phone\" type=\"tel\" required />\r\n                                </Form.Group>\r\n                                <button type=\"submit\">Register</button>\r\n                                <Link to=\"/\">\r\n                                    <button>Cancel</button>\r\n                                </Link>\r\n                            </Form>\r\n                        </div>\r\n                    </section>\r\n                </>\r\n                : \r\n                redirectToIndex()\r\n                }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(RegisterPhone);","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\EditGame.js",["240","241"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../StylingComponents/Header\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { UpdateGame, FetchAllGames, FetchGame, DeleteGame } from \"../../utils/GameStorage\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameMenu from \"../StylingComponents/GameMenu\";\r\n\r\n\r\nconst EditGame = (props) => {\r\n  const [validGameName, setValidGameName] = useState(false);\r\n  const [validGameDescription, setValidGameDescription] = useState(false);\r\n  const [deleteGame, setDeleteGame] = useState(false);\r\n  const [allGames, setAllGames] = useState([])\r\n  const [selectedGameId, setSelectedGameId] = useState(null);\r\n  const [gameObject, setGameObject] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetchAllGames();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedGameId !== null) {\r\n      fetchGame()\r\n    }\r\n    else {\r\n      setGameObject({})\r\n    }\r\n  }, [selectedGameId]);\r\n\r\n  useEffect(() => {\r\n\r\n  }, [gameObject]);\r\n\r\n  async function fetchAllGames() {\r\n    let allGames = await FetchAllGames();\r\n    if (allGames !== null) {\r\n      setAllGames(allGames);\r\n    } else {\r\n      alert('Failed to fetch games');\r\n      setAllGames([]);\r\n    }\r\n  }\r\n\r\n  async function fetchGame() {\r\n    let game = await FetchGame(selectedGameId);\r\n    if (game !== null) {\r\n      setGameObject(\r\n        {\r\n          name: game.name,\r\n          description: game.description,\r\n          gameState: game.gameState,\r\n          gameId: game.gameId,\r\n          startTime: game.startTime,\r\n          endTime: game.endTime,\r\n          maxNumberOfPlayers: game.maxNumberOfPlayers,\r\n          description: game.description\r\n        }\r\n      );\r\n    } else {\r\n      alert('Failed to fetch games');\r\n      setGameObject({});\r\n    }\r\n  }\r\n\r\n  async function editGame() {\r\n    let editGameResponse = await UpdateGame(gameObject);\r\n    if (editGameResponse.status === 200) {\r\n      props.history.push(\"/admin\");\r\n    } else if (editGameResponse.status === 400) {\r\n      alert(\"Game name must be unique!\");\r\n    } else {\r\n      alert(\"Something went wrong while updating the game.\");\r\n    }\r\n  }\r\n\r\n  const onGameNameChange = ev => {\r\n    let currentGameName = ev.target.value;\r\n    if (currentGameName.length < 4) {\r\n      setValidGameName(false);\r\n    }\r\n    else {\r\n      setGameObject((prevState) => ({\r\n        ...prevState,\r\n        name: currentGameName\r\n      }));\r\n      setValidGameName(true);\r\n    }\r\n  }\r\n\r\n  const onGameDescriptionChange = ev => {\r\n    let currentGameDescription = ev.target.value;\r\n    if (currentGameDescription.length < 4) {\r\n      setValidGameDescription(false);\r\n    }\r\n    else {\r\n      setGameObject((prevState) => ({\r\n        ...prevState,\r\n        description: currentGameDescription\r\n      }));\r\n      setValidGameDescription(true);\r\n    }\r\n  }\r\n\r\n  const onStartTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setGameObject((prevState) => ({\r\n      ...prevState,\r\n      startTime: time\r\n    }));\r\n  }\r\n\r\n  const onEndTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setGameObject((prevState) => ({\r\n      ...prevState,\r\n      endTime: time\r\n    }));\r\n  }\r\n\r\n  const onSizeChange = ev => {\r\n    let numPlayers = ev.target.value;\r\n    if (numPlayers > 0) {\r\n      setGameObject((prevState) => ({\r\n        ...prevState,\r\n        maxNumberOfPlayers: numPlayers\r\n      }));\r\n    }\r\n  }\r\n\r\n  async function onDeleteClicked() {\r\n    let gameResponse = await DeleteGame(gameObject.gameId);\r\n    if (gameResponse === 200) {\r\n      props.history.push(\"/currentgames\");\r\n    } else {\r\n      console.log(\"Something went wrong when trying to delete the game.\");\r\n    }\r\n  }\r\n\r\n  const onCheckBoxChanged = ev => {\r\n    setDeleteGame(!deleteGame);\r\n  }\r\n\r\n  function handleChangeGameToUpdate(ev) {\r\n    let selectedGame = ev.target.value;\r\n    if (selectedGame !== \"0\") {\r\n      setSelectedGameId(selectedGame)\r\n      setGameObject({})\r\n    }\r\n    else {\r\n      setSelectedGameId(null);\r\n    }\r\n  }\r\n\r\n  function isEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (obj.hasOwnProperty(prop))\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"home\">\r\n        <div className=\"container\">\r\n          <Header />\r\n          <GameMenu />\r\n          <h1>Edit game</h1>\r\n          <br />\r\n          <Form.Group>\r\n\r\n            <Form.Control\r\n              onChange={handleChangeGameToUpdate}\r\n              className=\"mb-4\"\r\n              as=\"select\">\r\n              <option value=\"0\">Select game...</option>\r\n              {allGames.filter(game => game.gameState !== 'COMPLETED').map(filteredGame => (\r\n                <option key={filteredGame.gameId} value={filteredGame.gameId}>\r\n                  {filteredGame.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n\r\n            {selectedGameId !== null && !isEmpty(gameObject) ?\r\n              <div>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter game name...\"\r\n                  defaultValue={gameObject.name}\r\n                  onChange={onGameNameChange} />\r\n                <br />\r\n                <Form.Control\r\n                  placeholder=\"Enter game description...\"\r\n                  as=\"textarea\"\r\n                  defaultValue={gameObject.description}\r\n                  rows={3}\r\n                  onChange={onGameDescriptionChange} />\r\n                <br />\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  label=\"Start time\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue={gameObject.startTime.substring(0, 16)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n\r\n                  onChange={onStartTimeChange}\r\n                />\r\n                <br />  <br />\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  label=\"End time\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue={gameObject.endTime.substring(0, 16)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={onEndTimeChange}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  defaultValue={gameObject.maxNumberOfPlayers}\r\n                  size=\"sm\"\r\n                  onChange={onSizeChange}\r\n                  placeholder=\"Max number of players...\">\r\n\r\n                </Form.Control>\r\n                <br /> <br />\r\n                <Button disabled={!validGameName || !validGameDescription} onClick={editGame}>Update Game</Button>\r\n                <Button disabled={!deleteGame} onClick={onDeleteClicked}>Delete Game</Button>\r\n                <Form.Group controlId=\"deleteGameCheckbox\">\r\n                  <Form.Check type=\"checkbox\" label=\"Delete Game?\" onChange={onCheckBoxChanged} />\r\n                </Form.Group>\r\n              </div>\r\n              : null}\r\n          </Form.Group>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default EditGame;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Phone.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AuthComponents\\Login.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\CreateMissionMarker.js",["242","243","244"],"import { TextField } from \"@material-ui/core\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from '../StylingComponents/Header';\r\nimport NavBar from \"../StylingComponents/NavBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CreateMission } from '../../utils/missionStorage'\r\nimport MainMap from \"../MapComponents/MainMap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst CreateMissionMarker = (props) => {\r\n  let gameId = localStorage.getItem(\"Game ID\")\r\n  let userId = localStorage.getItem(\"User ID\")\r\n\r\n  const [currentPlayer, setCurrentPlayer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCurrentPlayer();\r\n  }, [])\r\n\r\n  async function fetchCurrentPlayer() {                                                                    // user should be set to userId, not 1\r\n    const playerResponse = await fetch('/api/fetch/player/game=' + gameId + '/user=' + userId);\r\n    let body;\r\n    if (playerResponse.status === 200) {\r\n      body = await playerResponse.json();\r\n    } else {\r\n      body = null;\r\n    }\r\n    setCurrentPlayer(body);\r\n  }\r\n\r\n  const [validMissionName, setValidMissionName] = useState(false);\r\n  const [validDescription, setValidDescription] = useState(true);\r\n  const [missionObject, setMissionObject] = useState(\r\n    {\r\n      name: \"\",\r\n      missionDescription: \"\",\r\n      factionVisibility: \"HUMAN\",\r\n      missionPoint: {\r\n        x: 18.0249,\r\n        y: 59.2132\r\n      },\r\n      startTime: \"2021-01-01T08:00:00.000+00:00\",\r\n      endTime: \"2021-01-02T08:00:00.000+00:00\"\r\n    })\r\n\r\n  async function createMission() {\r\n    if (validMissionName === true) {\r\n      let createMissionResponse = await CreateMission(missionObject);\r\n      if (createMissionResponse.status === 201) {\r\n        props.history.push(\"/missions\");\r\n      } else if (createMissionResponse.status === 400) {\r\n        alert(\"Mission name must be unique!\");\r\n      } else {\r\n        alert(\"Something went wrong while creating the mission.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const onMissionNameChange = ev => {\r\n    let currentMissionName = ev.target.value;\r\n    if (currentMissionName.length < 4) {\r\n      setValidMissionName(false);\r\n    }\r\n    else {\r\n      setMissionObject((prevState) => ({\r\n        ...prevState,\r\n        name: currentMissionName\r\n      }));\r\n      setValidMissionName(true);\r\n    }\r\n    localStorage.setItem(\"Mission Name: \", ev.target.value)\r\n  }\r\n\r\n  const onDescriptionChange = ev => {\r\n    let currentDescription = ev.target.value;\r\n    if (currentDescription.length < 4) {\r\n      setValidDescription(false);\r\n    }\r\n    else {\r\n      setMissionObject((prevState) => ({\r\n        ...prevState,\r\n        missionDescription: currentDescription\r\n      }));\r\n      setValidDescription(true);\r\n    }\r\n  }\r\n\r\n  const onFactionChange = ev => {\r\n    let currentFaction = ev.target.value;\r\n    setMissionObject((prevState) => ({\r\n      ...prevState,\r\n      factionVisibility: currentFaction\r\n    }));\r\n  }\r\n\r\n\r\n  const onStartTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setMissionObject((prevState) => ({\r\n      ...prevState,\r\n      startTime: time\r\n    }));\r\n  }\r\n\r\n  const onEndTimeChange = ev => {\r\n    let time = ev.target.value;\r\n    setMissionObject((prevState) => ({\r\n      ...prevState,\r\n      endTime: time\r\n    }));\r\n  }\r\n\r\n const onLngChange = ev => {\r\n  let lng = ev.target.value;\r\n  setMissionObject((prevState) => ({\r\n    ...prevState,\r\n    missionPoint: {\r\n      x: lng,\r\n      y: missionObject.missionPoint.y\r\n    }\r\n  }));\r\n}\r\n\r\nconst onLatChange = ev => {\r\n  let lat = ev.target.value;\r\n  setMissionObject((prevState) => ({\r\n    ...prevState,\r\n    missionPoint: {\r\n      x: missionObject.missionPoint.x,\r\n      y: lat\r\n    }\r\n  }));\r\n}\r\n\r\n  function getCoordinates() {\r\n    let lngValue = localStorage.getItem(\"Lng: \")\r\n    let latValue = localStorage.getItem(\"Lat: \")\r\n\r\n    let lng = document.getElementById('p-lng');\r\n    lng.value = lngValue;\r\n\r\n    let lat = document.getElementById('p-lat');\r\n    lat.value = latValue;\r\n  }\r\n\r\n  function getLng() {\r\n    let copyText = document.getElementById(\"p-lng\");\r\n\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n\r\n    document.execCommand(\"copy\");\r\n\r\n    alert(\"Copied the text: \" + copyText.value);\r\n  }\r\n\r\n  function getLat() {\r\n    let copyText = document.getElementById(\"p-lat\");\r\n\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n\r\n    document.execCommand(\"copy\");\r\n\r\n    alert(\"Copied the text: \" + copyText.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <NavBar />\r\n      <section className=\"home\">\r\n        <div className=\"container\">\r\n          <h1>Create Mission Marker</h1>\r\n          <Form.Group>\r\n            <Form.Control type=\"text\" placeholder=\"Enter mission name\" onChange={onMissionNameChange} />\r\n            <br />\r\n            <Form.Control type=\"text\" placeholder=\"Mission description...\" onChange={onDescriptionChange} />\r\n            <br />\r\n            <label>Faction: </label>\r\n            <Form.Control as=\"select\" placeholder=\"Faction\" onChange={onFactionChange}>\r\n              <option>HUMAN</option>\r\n              <option>ZOMBIE</option>\r\n              <option>ALL</option>\r\n            </Form.Control>\r\n            <br />\r\n            <Form.Control type=\"text\" placeholder=\"Longitude\" onChange={onLngChange} />\r\n            <Form.Control type=\"text\" placeholder=\"Latitude\" onChange={onLatChange} />\r\n            <br />\r\n            <MainMap />\r\n            <input id=\"p-lng\" />\r\n            <button onClick={getLng}>Copy Lng</button>\r\n            <input id=\"p-lat\" />\r\n            <button onClick={getLat}>Copy Lat</button>\r\n            <br></br>\r\n            <button onClick={getCoordinates}>Get Coords</button>\r\n            <br />\r\n            <br />\r\n            <TextField\r\n              id=\"datetime-local\"\r\n              label=\"Start time\"\r\n              type=\"datetime-local\"\r\n              defaultValue=\"2021-01-01T08:00\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={onStartTimeChange}\r\n            />\r\n            <br />  <br />\r\n            <TextField\r\n              id=\"datetime-local\"\r\n              label=\"End time\"\r\n              type=\"datetime-local\"\r\n              defaultValue=\"2021-01-02T08:00\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={onEndTimeChange}\r\n            />\r\n            <br /><br />\r\n            <Button disabled={!validMissionName || !validDescription} onClick={createMission}>Create</Button><Link to=\"/admin\"><Button>Cancel</Button></Link>\r\n            <br></br>\r\n          </Form.Group>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateMissionMarker;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\AdminComponents\\EditMissionMarker.js",["245","246"],"import { TextField } from \"@material-ui/core\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from '../StylingComponents/Header';\r\nimport NavBar from \"../StylingComponents/NavBar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DeleteMission, UpdateMission, FetchMission, FetchAllMissions } from '../../utils/missionStorage'\r\nimport MainMap from \"../MapComponents/MainMap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst EditMissionMarker = (props) => {\r\n\r\n    const [validMissionName, setValidMissionName] = useState(false);\r\n    const [validDescription, setValidDescription] = useState(true);\r\n    const [deleteMission, setDeleteMission] = useState(false);\r\n    const [allMissions, setAllMissions] = useState([])\r\n    const [selectedMissionId, setSelectedMissionId] = useState(null);\r\n    const [missionObject, setMissionObject] = useState({})\r\n\r\n    useEffect(() => {\r\n        fetchAllMissions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedMissionId !== null) {\r\n            fetchMission()\r\n        }\r\n        else {\r\n            setMissionObject({})\r\n        }\r\n    }, [selectedMissionId]);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [missionObject]);\r\n\r\n    async function fetchAllMissions() {\r\n        let allMissions = await FetchAllMissions();\r\n        if (allMissions !== null) {\r\n            setAllMissions(allMissions);\r\n        } else {\r\n            alert('Failed to fetch missions');\r\n            setAllMissions([]);\r\n        }\r\n    }\r\n\r\n    async function fetchMission() {\r\n        let mission = await FetchMission(selectedMissionId);\r\n        if (mission !== null) {\r\n            setMissionObject(\r\n                {\r\n                    missionId: mission.missionId,\r\n                    name: mission.name,\r\n                    missionDescription: mission.missionDescription,\r\n                    factionVisibility: mission.factionVisibility,\r\n                    missionPoint: {\r\n                        x: mission.missionPoint.x,\r\n                        y: mission.missionPoint.y\r\n                    },\r\n                    missionState: mission.missionState,\r\n                    startTime: mission.startTime,\r\n                    endTime: mission.endTime\r\n                }\r\n            );\r\n        } else {\r\n            alert('Failed to fetch missions');\r\n            setMissionObject({});\r\n        }\r\n    }\r\n\r\n    async function editMission() {\r\n        let editMissionResponse = await UpdateMission(missionObject);\r\n        if (editMissionResponse.status === 200) {\r\n            props.history.push(\"/admin\");\r\n        } else if (editMissionResponse.status === 400) {\r\n            alert(\"Mission name must be unique!\");\r\n        } else {\r\n            alert(\"Something went wrong while updating the mission.\");\r\n        }\r\n    }\r\n\r\n    const onMissionNameChange = ev => {\r\n        let currentMissionName = ev.target.value;\r\n        if (currentMissionName.length < 4) {\r\n            setValidMissionName(false);\r\n        }\r\n        else {\r\n            setMissionObject((prevState) => ({\r\n                ...prevState,\r\n                name: currentMissionName\r\n            }));\r\n            setValidMissionName(true);\r\n        }\r\n        localStorage.setItem(\"Mission Name: \", ev.target.value)\r\n    }\r\n\r\n    const onDescriptionChange = ev => {\r\n        let currentDescription = ev.target.value;\r\n        if (currentDescription.length < 4) {\r\n            setValidDescription(false);\r\n        }\r\n        else {\r\n            setMissionObject((prevState) => ({\r\n                ...prevState,\r\n                missionDescription: currentDescription\r\n            }));\r\n            setValidDescription(true);\r\n        }\r\n    }\r\n\r\n    const onFactionChange = ev => {\r\n        let currentFaction = ev.target.value;\r\n        setMissionObject((prevState) => ({\r\n            ...prevState,\r\n            factionVisibility: currentFaction\r\n        }));\r\n    }\r\n\r\n\r\n    const onStartTimeChange = ev => {\r\n        let time = ev.target.value;\r\n        setMissionObject((prevState) => ({\r\n            ...prevState,\r\n            startTime: time\r\n        }));\r\n    }\r\n\r\n    const onEndTimeChange = ev => {\r\n        let time = ev.target.value;\r\n        setMissionObject((prevState) => ({\r\n            ...prevState,\r\n            endTime: time\r\n        }));\r\n    }\r\n\r\n    const onLngChange = ev => {\r\n        let lng = ev.target.value;\r\n        setMissionObject((prevState) => ({\r\n            ...prevState,\r\n            missionPoint: {\r\n                x: lng,\r\n                y: missionObject.missionPoint.y\r\n            }\r\n        }));\r\n    }\r\n\r\n    const onLatChange = ev => {\r\n        let lat = ev.target.value;\r\n        setMissionObject((prevState) => ({\r\n            ...prevState,\r\n            missionPoint: {\r\n                x: missionObject.missionPoint.x,\r\n                y: lat\r\n            }\r\n        }));\r\n    }\r\n\r\n    function getCoordinates() {\r\n        let lngValue = localStorage.getItem(\"Lng: \")\r\n        let latValue = localStorage.getItem(\"Lat: \")\r\n\r\n        let lng = document.getElementById('p-lng');\r\n        lng.value = lngValue;\r\n\r\n        let lat = document.getElementById('p-lat');\r\n        lat.value = latValue;\r\n    }\r\n\r\n    function getLng() {\r\n        let copyText = document.getElementById(\"p-lng\");\r\n\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999);\r\n\r\n        document.execCommand(\"copy\");\r\n\r\n        alert(\"Copied the text: \" + copyText.value);\r\n    }\r\n\r\n    function getLat() {\r\n        let copyText = document.getElementById(\"p-lat\");\r\n\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999);\r\n\r\n        document.execCommand(\"copy\");\r\n\r\n        alert(\"Copied the text: \" + copyText.value);\r\n    }\r\n    async function onDeleteClicked() {\r\n        let missionResponse = await DeleteMission(missionObject.missionId);\r\n        if (missionResponse === 200) {\r\n            props.history.push(\"/missions\");\r\n        } else {\r\n            console.log(\"Something went wrong when trying to delete the mission.\");\r\n        }\r\n    }\r\n\r\n    const onCheckBoxChanged = ev => {\r\n        setDeleteMission(!deleteMission);\r\n    }\r\n\r\n    function handleChangeMissionToUpdate(ev) {\r\n        let selectedMission = ev.target.value;\r\n        localStorage.setItem(\"Mission ID\", selectedMission)\r\n        if (selectedMission !== \"0\") {\r\n            setSelectedMissionId(selectedMission)\r\n            setMissionObject({})\r\n        }\r\n        else {\r\n            setSelectedMissionId(null);\r\n        }\r\n    }\r\n\r\n    function isEmpty(obj) {\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop))\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <NavBar />\r\n            <section className=\"home\">\r\n                <div className=\"container\">\r\n                    <h1>Edit Mission Marker</h1>\r\n                    <Form.Group>\r\n\r\n                        <Form.Control\r\n                            onChange={handleChangeMissionToUpdate}\r\n                            className=\"mb-4\"\r\n                            as=\"select\">\r\n                            <option value=\"0\">Select mission...</option>\r\n                            {allMissions.filter(mission => mission.factionVisibility !== 'ALL').map(filteredMission => (\r\n                                <option key={filteredMission.missionId} value={filteredMission.missionId}>\r\n                                    {filteredMission.name}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n\r\n\r\n                        {selectedMissionId !== null && !isEmpty(missionObject) ?\r\n                            <div>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter mission name\" defaultValue={missionObject.name} onChange={onMissionNameChange} />\r\n                                <br />\r\n                                <Form.Control type=\"text\" placeholder=\"Mission description...\" defaultValue={missionObject.missionDescription} onChange={onDescriptionChange} />\r\n                                <br />\r\n                                <label>Faction: </label>\r\n                                <Form.Control as=\"select\" placeholder=\"Faction\" defaultValue={missionObject.factionVisibility} onChange={onFactionChange}>\r\n                                    <option>HUMAN</option>\r\n                                    <option>ZOMBIE</option>\r\n                                    <option>ALL</option>\r\n                                </Form.Control>\r\n                                <br />\r\n                                <Form.Control type=\"text\" placeholder=\"Longitude\" defaultValue={missionObject.missionPoint.x} onChange={onLngChange} />\r\n                                <Form.Control type=\"text\" placeholder=\"Latitude\" defaultValue={missionObject.missionPoint.y} onChange={onLatChange} />\r\n                                <br />\r\n                                <MainMap />\r\n                                <input id=\"p-lng\" />\r\n                                <button onClick={getLng}>Copy Lng</button>\r\n                                <input id=\"p-lat\" />\r\n                                <button onClick={getLat}>Copy Lat</button>\r\n                                <br></br>\r\n                                <button onClick={getCoordinates}>Get Coords</button>\r\n                                <br />\r\n                                <br />\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"Start time\"\r\n                                    type=\"datetime-local\"\r\n                                    defaultValue={missionObject.startTime.substring(0, 16)}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    onChange={onStartTimeChange}\r\n                                />\r\n                                <br />  <br />\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"End time\"\r\n                                    type=\"datetime-local\"\r\n                                    defaultValue={missionObject.endTime.substring(0, 16)}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    onChange={onEndTimeChange}\r\n                                />\r\n                                <br /><br />\r\n                                <Button disabled={!validMissionName || !validDescription} onClick={editMission}>Update Mission</Button>\r\n                                <Button disabled={!deleteMission} onClick={onDeleteClicked}>Delete Mission</Button>\r\n                                <Form.Group controlId=\"deleteMissionCheckbox\">\r\n                                    <Form.Check type=\"checkbox\" label=\"Delete Mission?\" onChange={onCheckBoxChanged} />\r\n                                </Form.Group>\r\n\r\n                            </div>\r\n                            : null}\r\n                    </Form.Group>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditMissionMarker;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\ChooseFaction.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\Missions.js",["247","248","249"],"import { Button } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getPlayerInfo } from \"../../utils/gamedbstorage\";\r\nimport { FetchAllMissions } from '../../utils/missionStorage';\r\n\r\nconst Missions = (props) => {\r\n\r\n    const [missions, setMissions] = useState([]);\r\n    const [missionFilter, setmissionFilter] = useState('ALL');\r\n    let faction = localStorage.getItem(\"Faction\")\r\n\r\n    useEffect(() => {\r\n        fetchMissions();\r\n        getPlayerInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [missionFilter])\r\n\r\n    async function fetchMissions() {\r\n        const missions = await FetchAllMissions();\r\n        if (missions != null) {\r\n            setMissions(missions);\r\n        } else {\r\n            setMissions([]);\r\n        }\r\n    }\r\n\r\n    function handlePreview(id) {\r\n        localStorage.setItem(\"Mission ID\", id);\r\n        props.history.push(\"/mission\");\r\n    }\r\n\r\n    const onFilterButtonClicked = ev => {\r\n        let filter = ev.target.value;\r\n        setmissionFilter(filter);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"home\">\r\n                <div>\r\n                    <h2>Current Missions</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Mission</th>\r\n                                <th>Description</th>\r\n                                <th>Faction</th>\r\n                                <th>Start</th>\r\n                                <th>End</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {missions.map((m) =>\r\n                                <tr key={m.missionId}>\r\n                                    {m.name && m.factionVisibility === faction ? <td>{m.name}</td> : null}\r\n                                    {m.missionDescription && m.factionVisibility === faction ? <td>{m.missionDescription}</td> : null}\r\n                                    {m.factionVisibility  && m.factionVisibility === faction ? <td>{m.factionVisibility}</td> : null}\r\n                                    {m.startTime && m.factionVisibility === faction ? <td>{m.startTime}</td> : null}\r\n                                    {m.endTime && m.factionVisibility === faction ? <td>{m.endTime}</td> : null}\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <br></br>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Missions;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\GameComponents\\GameMap.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\Home.js",["250"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\HomeComponents\\LandingPage.js",["251","252"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\SquadComponents\\SquadDetail.js",["253","254","255","256","257","258"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\firebase.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\dbstorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\localstorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Header.js",["259"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css';\r\nimport GameMenu from './GameMenu';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <div id=\"headerContainer\">\r\n                <div id=\"logoContainer\">\r\n                    <img src=\"zombie_logo.jpg\" alt=\"zombie\" />\r\n                </div>\r\n\r\n                <div id=\"gameTitle\">Humans vs Zombies</div>\r\n\r\n                <div id=\"gameMenu\"><GameMenu /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\GameMenu.js",["260","261","262","263"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\HeaderOutside.js",["264","265"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css';\r\nimport firebase from '../../utils/firebase'\r\nimport { clearUser } from \"../../utils/localstorage\";\r\n\r\nconst HeaderOutside = () => {\r\n\r\n    const handleSignOut = () => {\r\n        firebase.auth().signOut()\r\n        clearUser();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"headerContainer\">\r\n                <div id=\"logoContainer\">\r\n                    <img src=\"zombie_logo.jpg\" alt=\"zombie\" />\r\n                </div>\r\n\r\n                <div id=\"gameTitle\">Humans vs Zombies</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderOutside;","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\PlayerStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\gamedbstorage.js",["266"],"export async function getPlayerInfo() {\r\n    const token = localStorage.getItem('jwt');\r\n    const response = await fetch('/api/fetch/player/all', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n\r\n    const status = await response.status\r\n    if (status === 200) {\r\n        const user = await response.json()\r\n    }\r\n    return status;\r\n}","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\squadstorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\ChatMessageComponents\\ChatMessage.js",["267","268","269"],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\NavBar.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\GameStorage.js",["270","271"],"import { getBaseUrl } from \"./baseUrl\";\r\nconst token = localStorage.getItem('jwt');\r\n\r\nlet lng = localStorage.getItem('Current Position Lng: ')\r\nlet lat = localStorage.getItem('Current Position Lat: ')\r\n\r\n\r\nexport async function FetchAllGames() {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/game/all\";\r\n    const response = await fetch(url, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function FetchGame(gameId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/game/\" + gameId;\r\n    const response = await fetch(url, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport async function CreateGame(gameData) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"create/game\"\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            name: gameData.name,\r\n            gameState: gameData.gameState,\r\n            startTime: gameData.startTime,\r\n            nwPoint: {\r\n                \"x\": lng,\r\n                \"y\": lat\r\n            },\r\n            sePoint: {\r\n                \"x\": lng,\r\n                \"y\": lat\r\n            },\r\n            endTime: gameData.endTime,\r\n            maxNumberOfPlayers: gameData.maxNumberOfPlayers,\r\n            description: gameData.description\r\n        })\r\n    })\r\n    return response;\r\n}\r\n\r\nexport async function UpdateGame(gameData) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"/update/game/\" + gameData.gameId;\r\n    const response = await fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            name: gameData.name,\r\n            description: gameData.description,\r\n            gameState: gameData.gameState,\r\n            startTime: gameData.startTime,\r\n            endTime: gameData.endTime,\r\n            maxNumberOfPlayers: gameData.maxNumberOfPlayers,\r\n            description: gameData.description\r\n        })\r\n    })\r\n    return response;\r\n}\r\n\r\nexport async function DeleteGame(gameId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"delete/game/\" + gameId;\r\n    const response = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    return response.status;\r\n}","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\SquadMemberStorage.js",["272"],"import { getBaseUrl } from \"./baseUrl\";\r\nconst token = localStorage.getItem('jwt');\r\n\r\nexport async function FetchSquadMember(gameId, playerId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/squadmember/game=\" + gameId + \"/player=\" + playerId;\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function UpdateSquadMember(squadMemberId, squadId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let squadObject;\r\n    if (squadId === null) {\r\n        squadObject = null;\r\n    } else {\r\n        squadObject = {squadId: squadId}\r\n    }\r\n    let url = getBaseUrl() + \"update/squadmember/\" + squadMemberId; \r\n    const response = await fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            squad: squadObject,\r\n        })\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function CreateSquadMember(gameId, squadId, playerId, rank) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"create/squadmember/\" + gameId + \"/\"+ squadId + \"/\" + playerId;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            squadRank: rank\r\n        })\r\n    });\r\n    if (response.status === 201) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\missionStorage.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\MapComponents\\MainMap.js",["273","274","275","276","277","278"],"import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nimport { FetchAllMissions } from '../../utils/missionStorage';\r\nimport { FetchAllSquadCheckin } from '../../utils/squadCheckinStorage';\r\nimport { FetchAllKills } from '../../utils/KillStorage';\r\n\r\n//mapboxgl.accessToken = 'pk.eyJ1IjoicGVyY2hyaXN0ZXI3IiwiYSI6ImNraWhqYTJqejF2engyc3BvbTdrcHhsNzIifQ.SE5ympIl6CiI_0GCnrRNnA';\r\nmapboxgl.accessToken = 'pk.eyJ1IjoicGVyY2hyaXN0ZXI3IiwiYSI6ImNramlpcXF6aTB5dHMydHFveHE0cDdleXMifQ.cOdCvVE4RuyE_0SRtC-1ww'\r\n\r\nclass MainMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 18.0622,\r\n      lat: 59.3319,\r\n      zoom: 5\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let coordinates = document.getElementById('coordinates');\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n\r\n    let marker = new mapboxgl.Marker({\r\n      draggable: true\r\n    });\r\n\r\n    let faction = localStorage.getItem(\"Faction\")\r\n    let user = localStorage.getItem(\"Username\")\r\n\r\n    async function fetchMissions() {\r\n      let missions = await FetchAllMissions();\r\n      if (missions != null) {\r\n        missions.map((m) => {\r\n\r\n          let mission = document.createElement('div');\r\n          mission.className = 'mission';\r\n          let missionMarker = new mapboxgl.Marker(mission);\r\n\r\n          let popup = new mapboxgl.Popup({ offset: 25 })\r\n            .setText('Name: ' + m.name);\r\n\r\n          if (m.missionPoint !== null && m.factionVisibility === faction) {\r\n            missionMarker\r\n              .setLngLat([m.missionPoint.x, m.missionPoint.y]).setPopup(popup).addTo(map)\r\n          }\r\n        }\r\n        )\r\n\r\n      }\r\n    }\r\n\r\n    async function fetchSquadCheckins() {\r\n      let squadCheckins = await FetchAllSquadCheckin();\r\n      if (squadCheckins != null) {\r\n        squadCheckins\r\n          .map((sq) => {\r\n\r\n            let squadCheckin = document.createElement('div');\r\n            squadCheckin.className = 'squad';\r\n            let squadCheckinMarker = new mapboxgl.Marker(squadCheckin);\r\n\r\n            let popup = new mapboxgl.Popup({ offset: 25 })\r\n              .setText('Hello, ' + user);\r\n\r\n            if (sq.position !== null && sq.squadId !== null || sq.squadId !== undefined) {\r\n              squadCheckinMarker\r\n                .setLngLat([sq.position.x, sq.position.y]).setPopup(popup).addTo(map)\r\n            }\r\n          }\r\n          )\r\n      }\r\n    }\r\n\r\n    async function fetchKills() {\r\n      let kills = await FetchAllKills();\r\n      if (kills != null) {\r\n        kills\r\n          .map((k) => {\r\n\r\n            let kill = document.createElement('div');\r\n            kill.className = 'gravestone';\r\n            let killMarker = new mapboxgl.Marker(kill);\r\n\r\n            let popup = new mapboxgl.Popup({ offset: 25 })\r\n              .setText('Description: ' + k.description + '\\nTime of Death: ' + k.timeOfDeath.replace('T', ' ').substring(0, k.timeOfDeath.lastIndexOf('.')));\r\n\r\n            killMarker\r\n              .setLngLat([k.position.x, k.position.y]).setPopup(popup).addTo(map)\r\n          }\r\n          )\r\n\r\n      }\r\n    }\r\n\r\n    fetchMissions();\r\n    fetchSquadCheckins();\r\n    fetchKills();\r\n\r\n    function onDragEnd() {\r\n      let lngLat = marker.getLngLat();\r\n      let lngValue = lngLat.lng.toFixed(4);\r\n      let latValue = lngLat.lat.toFixed(4);\r\n      coordinates.innerHTML =\r\n        'Longitude: ' + lngValue + '<br />Latitude: ' + latValue;\r\n      localStorage.setItem(\"Lng: \", lngValue);\r\n      localStorage.setItem(\"Lat: \", latValue);\r\n    }\r\n\r\n    marker.on('dragend', onDragEnd);\r\n\r\n    function showPosition(position) {\r\n      let currentPosition = document.getElementById(\"current-position\");\r\n      // currentPosition.innerHTML = \"Longitude: \" + position.coords.longitude +\r\n      //   \"<br>Latitude: \" + position.coords.latitude;\r\n      marker.setLngLat([position.coords.longitude.toFixed(4), position.coords.latitude.toFixed(4)]).addTo(map)\r\n      localStorage.setItem('Current Position Lng: ', position.coords.longitude.toFixed(4))\r\n      localStorage.setItem('Current Position Lat: ', position.coords.latitude.toFixed(4))\r\n    }\r\n\r\n    if (navigator.geolocation) {\r\n      map.addControl(\r\n        new mapboxgl.GeolocateControl({\r\n          positionOptions: {\r\n            enableHighAccuracy: true,\r\n          },\r\n          trackUserLocation: true\r\n        }),\r\n        navigator.geolocation.getCurrentPosition(showPosition)\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <link href=\"https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css\" rel=\"stylesheet\" />\r\n        <script src='https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.js'></script>\r\n        <div ref={el => this.mapContainer = el} className='leaflet-container'></div>\r\n        <label>Marker Location: </label>\r\n        <p id=\"coordinates\"></p>\r\n        {/* <label>Current Location: </label> */}\r\n        <p id=\"current-position\"></p>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainMap","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\squadCheckinStorage.js",["279"],"import { getBaseUrl } from \"./baseUrl\";\r\n\r\nexport async function FetchAllSquadCheckin() {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/squadcheckin/all\";\r\n    const response = await fetch(url, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function FetchGame(squadCheckinId) {\r\n    let url = getBaseUrl() + \"fetch/squadcheckin/\" + squadCheckinId;\r\n    const response = await fetch(url);\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function CreateSquadCheckin(gameId, squadId, squadMemberId, currentTime, lng, lat) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"create/squadcheckin/\" + gameId + '/' + squadId + '/' + squadMemberId\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify({\r\n            pointOfTime: currentTime,\r\n            position: {\r\n                x: lng,\r\n                y: lat\r\n            },\r\n            gameId: gameId,\r\n            squadId: squadId,\r\n            squadMemberId: squadMemberId\r\n        })\r\n    })\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n    return response;\r\n}\r\n\r\nexport async function UpdateSquadCheckin(squadCheckinId, gameId, squadId, squadMemberId, currentTime, lng, lat) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"/update/squadcheckin/\" + squadCheckinId;\r\n    const response = await fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify({\r\n            pointOfTime: currentTime,\r\n            position: {\r\n                x: lng,\r\n                y: lat\r\n            },\r\n            gameId: gameId,\r\n            squadId: squadId,\r\n            squadMemberId: squadMemberId\r\n        })\r\n    })\r\n    return response;\r\n}\r\n\r\nexport async function DeleteSquadCheckin(squadCheckinId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"delete/squadcheckin/\" + squadCheckinId;\r\n    const response = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    });\r\n    return response.status;\r\n}","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\baseUrl.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\components\\StylingComponents\\Modal.js",[],"C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\ChatMessageStorage.js",["280"],"import { getBaseUrl } from \"./baseUrl\";\r\nconst token = localStorage.getItem('jwt');\r\n\r\nexport async function GetAllChatMessages() {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/chatmessage/all\";\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function GetChatMessageById(chatMessageId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/chatmessage/\" + chatMessageId;\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function GetBundleOfChatMessages(request) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"fetch/chatmessage/bundle\";\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            gameId: request.gameId,\r\n            faction: request.faction,\r\n            squadId: request.squadId,\r\n        })\r\n    });\r\n    if (response.status === 200) {\r\n        let body = await response.json();\r\n        return body;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function CreateMessage(messageData) {\r\n    const token = localStorage.getItem('jwt');\r\n    let squadId = messageData.squadId;\r\n    if (squadId === 'null') {\r\n        squadId = 0;\r\n    }\r\n    let url = getBaseUrl() + \"create/chatmessage/\" + messageData.gameId + \"/\" + messageData.playerId + \"/\" + squadId;\r\n\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            message: messageData.message,\r\n            faction: messageData.faction,\r\n            timestamp: messageData.timestamp,\r\n            gameId: messageData.gameId,\r\n            squadId: messageData.squadId,\r\n        })\r\n    })\r\n    return response;\r\n}\r\n\r\nexport async function DeleteChatMessage(msgId) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"delete/chatmessage/\" + msgId;\r\n    const response = await fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        }\r\n    });\r\n    return response.status;\r\n}\r\n\r\nexport async function UpdateChatMessage(messageData) {\r\n    const token = localStorage.getItem('jwt');\r\n    let url = getBaseUrl() + \"update/chatmessage/\" + messageData.chatMessageId;\r\n    const response = await fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + token \r\n        },\r\n        body: JSON.stringify({\r\n            message: messageData.message,\r\n        })\r\n    })\r\n    return response;\r\n}","C:\\Users\\Hampe\\OneDrive\\Dokument\\Github\\Humans-vs-zombies\\frontend\\src\\utils\\KillStorage.js",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":3,"column":42,"nodeType":"287","messageId":"288","endLine":3,"endColumn":48},{"ruleId":"289","severity":1,"message":"290","line":13,"column":8,"nodeType":"291","endLine":13,"endColumn":10,"suggestions":"292"},{"ruleId":"285","severity":1,"message":"293","line":10,"column":7,"nodeType":"287","messageId":"288","endLine":10,"endColumn":16},{"ruleId":"285","severity":1,"message":"294","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":21},{"ruleId":"289","severity":1,"message":"295","line":38,"column":8,"nodeType":"291","endLine":38,"endColumn":10,"suggestions":"296"},{"ruleId":"289","severity":1,"message":"297","line":42,"column":8,"nodeType":"291","endLine":42,"endColumn":29,"suggestions":"298"},{"ruleId":"289","severity":1,"message":"299","line":46,"column":8,"nodeType":"291","endLine":46,"endColumn":23,"suggestions":"300"},{"ruleId":"285","severity":1,"message":"301","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"295","line":14,"column":8,"nodeType":"291","endLine":14,"endColumn":10,"suggestions":"302"},{"ruleId":"285","severity":1,"message":"301","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"295","line":28,"column":8,"nodeType":"291","endLine":28,"endColumn":10,"suggestions":"303"},{"ruleId":"289","severity":1,"message":"304","line":20,"column":8,"nodeType":"291","endLine":20,"endColumn":10,"suggestions":"305"},{"ruleId":"285","severity":1,"message":"306","line":40,"column":12,"nodeType":"287","messageId":"288","endLine":40,"endColumn":25},{"ruleId":"289","severity":1,"message":"295","line":44,"column":8,"nodeType":"291","endLine":44,"endColumn":10,"suggestions":"307"},{"ruleId":"285","severity":1,"message":"308","line":56,"column":12,"nodeType":"287","messageId":"288","endLine":56,"endColumn":23},{"ruleId":"289","severity":1,"message":"309","line":60,"column":8,"nodeType":"291","endLine":60,"endColumn":10,"suggestions":"310"},{"ruleId":"285","severity":1,"message":"311","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":26},{"ruleId":"285","severity":1,"message":"312","line":1,"column":28,"nodeType":"287","messageId":"288","endLine":1,"endColumn":36},{"ruleId":"285","severity":1,"message":"293","line":7,"column":7,"nodeType":"287","messageId":"288","endLine":7,"endColumn":16},{"ruleId":"285","severity":1,"message":"313","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":18},{"ruleId":"285","severity":1,"message":"314","line":7,"column":10,"nodeType":"287","messageId":"288","endLine":7,"endColumn":21},{"ruleId":"285","severity":1,"message":"315","line":26,"column":13,"nodeType":"287","messageId":"288","endLine":26,"endColumn":24},{"ruleId":"289","severity":1,"message":"316","line":29,"column":6,"nodeType":"291","endLine":29,"endColumn":22,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":57,"column":11,"nodeType":"320","messageId":"321","endLine":57,"endColumn":22},{"ruleId":"285","severity":1,"message":"293","line":11,"column":7,"nodeType":"287","messageId":"288","endLine":11,"endColumn":16},{"ruleId":"285","severity":1,"message":"306","line":27,"column":10,"nodeType":"287","messageId":"288","endLine":27,"endColumn":23},{"ruleId":"289","severity":1,"message":"295","line":31,"column":6,"nodeType":"291","endLine":31,"endColumn":8,"suggestions":"322"},{"ruleId":"285","severity":1,"message":"293","line":10,"column":7,"nodeType":"287","messageId":"288","endLine":10,"endColumn":16},{"ruleId":"289","severity":1,"message":"323","line":42,"column":8,"nodeType":"291","endLine":42,"endColumn":27,"suggestions":"324"},{"ruleId":"285","severity":1,"message":"325","line":1,"column":10,"nodeType":"287","messageId":"288","endLine":1,"endColumn":16},{"ruleId":"285","severity":1,"message":"326","line":30,"column":14,"nodeType":"287","messageId":"288","endLine":30,"endColumn":27},{"ruleId":"285","severity":1,"message":"327","line":35,"column":11,"nodeType":"287","messageId":"288","endLine":35,"endColumn":32},{"ruleId":"289","severity":1,"message":"328","line":20,"column":6,"nodeType":"291","endLine":20,"endColumn":8,"suggestions":"329"},{"ruleId":"285","severity":1,"message":"330","line":8,"column":10,"nodeType":"287","messageId":"288","endLine":8,"endColumn":14},{"ruleId":"289","severity":1,"message":"331","line":51,"column":8,"nodeType":"291","endLine":51,"endColumn":10,"suggestions":"332"},{"ruleId":"285","severity":1,"message":"301","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":26},{"ruleId":"285","severity":1,"message":"333","line":19,"column":9,"nodeType":"287","messageId":"288","endLine":19,"endColumn":17},{"ruleId":"289","severity":1,"message":"334","line":28,"column":8,"nodeType":"291","endLine":28,"endColumn":10,"suggestions":"335"},{"ruleId":"289","severity":1,"message":"336","line":73,"column":8,"nodeType":"291","endLine":73,"endColumn":10,"suggestions":"337"},{"ruleId":"285","severity":1,"message":"306","line":93,"column":12,"nodeType":"287","messageId":"288","endLine":93,"endColumn":25},{"ruleId":"289","severity":1,"message":"295","line":97,"column":8,"nodeType":"291","endLine":97,"endColumn":10,"suggestions":"338"},{"ruleId":"285","severity":1,"message":"330","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":14},{"ruleId":"285","severity":1,"message":"301","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":26},{"ruleId":"285","severity":1,"message":"339","line":9,"column":7,"nodeType":"287","messageId":"288","endLine":9,"endColumn":28},{"ruleId":"285","severity":1,"message":"306","line":36,"column":12,"nodeType":"287","messageId":"288","endLine":36,"endColumn":25},{"ruleId":"289","severity":1,"message":"295","line":40,"column":8,"nodeType":"291","endLine":40,"endColumn":10,"suggestions":"340"},{"ruleId":"285","severity":1,"message":"330","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":14},{"ruleId":"285","severity":1,"message":"341","line":9,"column":11,"nodeType":"287","messageId":"288","endLine":9,"endColumn":24},{"ruleId":"285","severity":1,"message":"342","line":12,"column":15,"nodeType":"287","messageId":"288","endLine":12,"endColumn":19},{"ruleId":"285","severity":1,"message":"343","line":30,"column":29,"nodeType":"287","messageId":"288","endLine":30,"endColumn":36},{"ruleId":"289","severity":1,"message":"344","line":53,"column":8,"nodeType":"291","endLine":53,"endColumn":10,"suggestions":"345"},{"ruleId":"289","severity":1,"message":"346","line":57,"column":8,"nodeType":"291","endLine":57,"endColumn":17,"suggestions":"347"},{"ruleId":"285","severity":1,"message":"348","line":2,"column":7,"nodeType":"287","messageId":"288","endLine":2,"endColumn":12},{"ruleId":"318","severity":1,"message":"319","line":86,"column":13,"nodeType":"320","messageId":"321","endLine":86,"endColumn":24},{"ruleId":"285","severity":1,"message":"348","line":2,"column":7,"nodeType":"287","messageId":"288","endLine":2,"endColumn":12},{"ruleId":"349","severity":1,"message":"350","line":40,"column":26,"nodeType":"351","messageId":"352","endLine":40,"endColumn":28},{"ruleId":"349","severity":1,"message":"350","line":63,"column":21,"nodeType":"351","messageId":"352","endLine":63,"endColumn":23},{"ruleId":"353","severity":1,"message":"354","line":72,"column":38,"nodeType":"355","messageId":"356","endLine":72,"endColumn":40},{"ruleId":"353","severity":1,"message":"354","line":72,"column":61,"nodeType":"355","messageId":"356","endLine":72,"endColumn":63},{"ruleId":"349","severity":1,"message":"350","line":85,"column":20,"nodeType":"351","messageId":"352","endLine":85,"endColumn":22},{"ruleId":"285","severity":1,"message":"357","line":119,"column":11,"nodeType":"287","messageId":"288","endLine":119,"endColumn":26},{"ruleId":"358","severity":1,"message":"359","line":56,"column":5,"nodeType":"360","messageId":"361","endLine":56,"endColumn":21},{"ruleId":"285","severity":1,"message":"348","line":2,"column":7,"nodeType":"287","messageId":"288","endLine":2,"endColumn":12},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["364"],"'useStyles' is assigned a value but never used.","'FetchPlayer' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchCurrentPlayer'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'fetchCurrentVictim'. Either include it or remove the dependency array.",["366"],"React Hook useEffect has a missing dependency: 'fetchCurrentVictimUser'. Either include it or remove the dependency array.",["367"],"'Component' is defined but never used.",["368"],["369"],"React Hook useEffect has a missing dependency: 'fetchSquads'. Either include it or remove the dependency array.",["370"],"'currentPlayer' is assigned a value but never used.",["371"],"'squadMember' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSquadMember'. Either include it or remove the dependency array.",["372"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'getUserInfo' is defined but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.",["373"],"no-dupe-keys","Duplicate key 'description'.","ObjectExpression","unexpected",["374"],"React Hook useEffect has a missing dependency: 'fetchMission'. Either include it or remove the dependency array.",["375"],"'Button' is defined but never used.","'handlePreview' is defined but never used.","'onFilterButtonClicked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserID'. Either include it or remove the dependency array.",["376"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["377"],"'playerId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSquadMembers'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has a missing dependency: 'fetchSquad'. Either include it or remove the dependency array.",["379"],["380"],"'BUTTON_WRAPPER_STYLES' is assigned a value but never used.",["381"],"'handleSignOut' is assigned a value but never used.","'user' is assigned a value but never used.","'request' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatRoom', 'fetchMessages', 'gameId', 'playerFaction', 'playerId', 'props.history', and 'userId'. Either include them or remove the dependency array.",["382"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["383"],"'token' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'currentPosition' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"386","fix":"392"},{"desc":"386","fix":"393"},{"desc":"394","fix":"395"},{"desc":"386","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"386","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"386","fix":"412"},{"desc":"386","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},"Update the dependencies array to be: [fetchCurrentUser]",{"range":"418","text":"419"},"Update the dependencies array to be: [fetchCurrentPlayer]",{"range":"420","text":"421"},"Update the dependencies array to be: [fetchCurrentVictim, validBiteCodeLength]",{"range":"422","text":"423"},"Update the dependencies array to be: [currentVictim, fetchCurrentVictimUser]",{"range":"424","text":"425"},{"range":"426","text":"421"},{"range":"427","text":"421"},"Update the dependencies array to be: [fetchSquads]",{"range":"428","text":"429"},{"range":"430","text":"421"},"Update the dependencies array to be: [fetchSquadMember]",{"range":"431","text":"432"},"Update the dependencies array to be: [fetchGame, selectedGameId]",{"range":"433","text":"434"},{"range":"435","text":"421"},"Update the dependencies array to be: [fetchMission, selectedMissionId]",{"range":"436","text":"437"},"Update the dependencies array to be: [fetchUserID]",{"range":"438","text":"439"},"Update the dependencies array to be: [props.history]",{"range":"440","text":"441"},"Update the dependencies array to be: [fetchSquadMembers]",{"range":"442","text":"443"},"Update the dependencies array to be: [fetchSquad]",{"range":"444","text":"445"},{"range":"446","text":"421"},{"range":"447","text":"421"},"Update the dependencies array to be: [chatRoom, fetchMessages, gameId, playerFaction, playerId, props.history, userId]",{"range":"448","text":"449"},"Update the dependencies array to be: [fetchMessages, refresh]",{"range":"450","text":"451"},[352,354],"[fetchCurrentUser]",[1645,1647],"[fetchCurrentPlayer]",[1714,1735],"[fetchCurrentVictim, validBiteCodeLength]",[1810,1825],"[currentVictim, fetchCurrentVictimUser]",[441,443],[945,947],[839,841],"[fetchSquads]",[1481,1483],[1895,1897],"[fetchSquadMember]",[985,1001],"[fetchGame, selectedGameId]",[944,946],[1397,1416],"[fetchMission, selectedMissionId]",[742,744],"[fetchUserID]",[2337,2339],"[props.history]",[966,968],"[fetchSquadMembers]",[2541,2543],"[fetchSquad]",[3154,3156],[1046,1048],[2291,2293],"[chatRoom, fetchMessages, gameId, playerFaction, playerId, props.history, userId]",[2355,2364],"[fetchMessages, refresh]"]